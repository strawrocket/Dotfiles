{"version":3,"file":"content/8820.js","mappings":"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","sources":["webpack://MALSync/./src/_provider/AniList/single.ts","webpack://MALSync/./src/_provider/Kitsu/single.ts","webpack://MALSync/./src/_provider/Local/single.ts","webpack://MALSync/./src/_provider/MyAnimeList_api/single.ts","webpack://MALSync/./src/_provider/MyAnimeList_hybrid/single.ts","webpack://MALSync/./src/_provider/ScoreMode/point10.ts","webpack://MALSync/./src/_provider/ScoreMode/point100.ts","webpack://MALSync/./src/_provider/ScoreMode/point100decimal.ts","webpack://MALSync/./src/_provider/ScoreMode/point10decimal.ts","webpack://MALSync/./src/_provider/ScoreMode/point20decimal.ts","webpack://MALSync/./src/_provider/ScoreMode/smiley3.ts","webpack://MALSync/./src/_provider/ScoreMode/smiley4.ts","webpack://MALSync/./src/_provider/ScoreMode/stars5.ts","webpack://MALSync/./src/_provider/Shikimori/single.ts","webpack://MALSync/./src/_provider/Simkl/single.ts","webpack://MALSync/./src/_provider/singleAbstract.ts","webpack://MALSync/./src/_provider/singleFactory.ts","webpack://MALSync/./src/utils/errors.ts","webpack://MALSync/./src/_minimal/components/image-text.vue?bf5b","webpack://MALSync/./src/_minimal/components/image-text.vue","webpack://MALSync/./src/_minimal/components/image-text.vue?c79c"],"sourcesContent":["import { SingleAbstract } from '../singleAbstract';\nimport * as helper from './helper';\nimport { NotAutenticatedError, UrlNotSupportedError } from '../Errors';\nimport { point100 } from '../ScoreMode/point100';\nimport { point10 } from '../ScoreMode/point10';\nimport { smiley3 } from '../ScoreMode/smiley3';\nimport { stars5 } from '../ScoreMode/stars5';\nimport { point100decimal } from '../ScoreMode/point100decimal';\n\nexport class Single extends SingleAbstract {\n  constructor(protected url: string) {\n    super(url);\n    this.logger = con.m(this.shortName, '#3db4f2');\n    return this;\n  }\n\n  private animeInfo: any;\n\n  private displayUrl = '';\n\n  shortName = 'AniList';\n\n  authenticationUrl =\n    'https://anilist.co/api/v2/oauth/authorize?client_id=1487&response_type=token';\n\n  protected handleUrl(url) {\n    if (url.match(/anilist\\.co\\/(anime|manga)\\/\\d*/i)) {\n      this.type = utils.urlPart(url, 3) === 'anime' ? 'anime' : 'manga';\n      this.ids.ani = Number(utils.urlPart(url, 4));\n      return;\n    }\n    if (url.match(/myanimelist\\.net\\/(anime|manga)\\/\\d*/i)) {\n      this.type = utils.urlPart(url, 3) === 'anime' ? 'anime' : 'manga';\n      this.ids.mal = Number(utils.urlPart(url, 4));\n      return;\n    }\n    throw new UrlNotSupportedError(url);\n  }\n\n  getCacheKey() {\n    return this.getKey(['ANILIST']);\n  }\n\n  getPageId() {\n    return this.ids.ani;\n  }\n\n  _getStatus() {\n    return parseInt(helper.statusTranslate[this.animeInfo.mediaListEntry.status]);\n  }\n\n  _setStatus(status) {\n    this.animeInfo.mediaListEntry.status = helper.statusTranslate[status];\n  }\n\n  _getScore() {\n    if (Number(this.animeInfo.mediaListEntry.score) === 0) return 0;\n    const score = Math.round(Number(this.animeInfo.mediaListEntry.score) / 10);\n    if (score === 0) return 1;\n    return score;\n  }\n\n  _setScore(score) {\n    this.animeInfo.mediaListEntry.score = score * 10;\n  }\n\n  _getAbsoluteScore() {\n    return Number(this.animeInfo.mediaListEntry.score);\n  }\n\n  _setAbsoluteScore(score) {\n    this.animeInfo.mediaListEntry.score = Number(score);\n  }\n\n  _getEpisode() {\n    return this.animeInfo.mediaListEntry.progress;\n  }\n\n  _setEpisode(episode) {\n    this.animeInfo.mediaListEntry.progress = parseInt(`${episode}`);\n  }\n\n  _getVolume() {\n    return this.animeInfo.mediaListEntry.progressVolumes;\n  }\n\n  _setVolume(volume) {\n    this.animeInfo.mediaListEntry.progressVolumes = volume;\n  }\n\n  _getTags() {\n    let tags = this.animeInfo.mediaListEntry.notes;\n    if (tags === null || tags === 'null') tags = '';\n    return tags;\n  }\n\n  _setTags(tags) {\n    this.animeInfo.mediaListEntry.notes = tags;\n  }\n\n  _getTitle() {\n    return this.animeInfo.title.userPreferred;\n  }\n\n  _getTotalEpisodes() {\n    const eps = this.animeInfo.episodes ? this.animeInfo.episodes : this.animeInfo.chapters;\n    if (eps === null) return 0;\n    return eps;\n  }\n\n  _getTotalVolumes() {\n    const vol = this.animeInfo.volumes;\n    if (!vol) return 0;\n    return vol;\n  }\n\n  _getDisplayUrl() {\n    return this.displayUrl !== '' && this.displayUrl !== null ? this.displayUrl : this.url;\n  }\n\n  _getImage() {\n    return helper.imgCheck(this.animeInfo.coverImage.large);\n  }\n\n  _getRating() {\n    return Promise.resolve(this.animeInfo.averageScore);\n  }\n\n  async _update() {\n    let selectId = this.ids.mal;\n    let selectQuery = 'idMal';\n    if (Number.isNaN(this.ids.mal)) {\n      selectId = this.ids.ani;\n      selectQuery = 'id';\n    }\n\n    const query = `\n    query ($id: Int, $type: MediaType) {\n      Media (${selectQuery}: $id, type: $type) {\n        id\n        idMal\n        siteUrl\n        episodes\n        chapters\n        volumes\n        averageScore\n        coverImage{\n          large\n        }\n        title {\n          userPreferred\n        }\n        mediaListEntry {\n          id\n          status\n          progress\n          progressVolumes\n          score(format: POINT_100)\n          repeat\n          notes\n        }\n      }\n    }\n    `;\n    const variables = {\n      id: selectId,\n      type: this.type!.toUpperCase(),\n    };\n\n    this._authenticated = true;\n\n    return this.apiCall(query, variables)\n      .catch(e => {\n        if (e instanceof NotAutenticatedError) {\n          this._authenticated = false;\n          return this.apiCall(query, variables, false);\n        }\n        throw e;\n      })\n      .then(json => {\n        this.logger.log('[SINGLE]', 'Data', json);\n\n        this.animeInfo = json.data.Media;\n\n        this.ids.ani = this.animeInfo.id;\n        if (Number.isNaN(this.ids.mal) && this.animeInfo.idMal) {\n          this.ids.mal = this.animeInfo.idMal;\n        }\n\n        this.displayUrl = this.animeInfo.siteUrl;\n        this._onList = true;\n        if (this.animeInfo.mediaListEntry === null) {\n          this._onList = false;\n          this.animeInfo.mediaListEntry = {\n            notes: '',\n            progress: 0,\n            progressVolumes: 0,\n            repeat: 0,\n            score: 0,\n            status: 'PLANNING',\n          };\n        }\n\n        if (!this._authenticated) throw new NotAutenticatedError('Not Authenticated');\n      });\n  }\n\n  async _sync() {\n    let query = `\n      mutation ($mediaId: Int, $status: MediaListStatus, $progress: Int, $scoreRaw: Int, $notes: String) {\n        SaveMediaListEntry (mediaId: $mediaId, status: $status, progress: $progress, scoreRaw: $scoreRaw, notes: $notes) {\n          id\n          status\n          progress\n        }\n      }\n    `;\n    const variables = {\n      mediaId: this.ids.ani,\n      status: this.animeInfo.mediaListEntry.status,\n      progress: this.animeInfo.mediaListEntry.progress,\n      scoreRaw: this.animeInfo.mediaListEntry.score,\n      notes: this.animeInfo.mediaListEntry.notes,\n      volumes: null,\n    };\n\n    if (this.type === 'manga') {\n      query = `\n        mutation ($mediaId: Int, $status: MediaListStatus, $progress: Int, $scoreRaw: Int, $notes: String, $volumes: Int) {\n          SaveMediaListEntry (mediaId: $mediaId, status: $status, progress: $progress, scoreRaw: $scoreRaw, notes: $notes, progressVolumes: $volumes) {\n            id\n            status\n            progress\n            progressVolumes\n          }\n        }\n      `;\n      variables.volumes = this.animeInfo.mediaListEntry.progressVolumes;\n    }\n\n    return this.apiCall(query, variables).then(json => {\n      if (json && json.data && json.data.SaveMediaListEntry && json.data.SaveMediaListEntry.id) {\n        this.animeInfo.mediaListEntry.id = json.data.SaveMediaListEntry.id;\n      }\n      return json;\n    });\n  }\n\n  protected apiCall(query, variables, authentication = true) {\n    return helper.apiCall(query, variables, authentication);\n  }\n\n  public getScoreMode() {\n    switch (api.settings.get('anilistOptions').scoreFormat) {\n      case 'POINT_100':\n        return point100;\n      case 'POINT_3':\n        return smiley3;\n      case 'POINT_5':\n        return stars5;\n      case 'POINT_10_DECIMAL':\n        return point100decimal;\n      default:\n        return point10;\n    }\n  }\n\n  _delete() {\n    const query = `\n      mutation ($mediaId: Int) {\n        DeleteMediaListEntry(id: $mediaId) {\n          deleted\n        }\n      }\n    `;\n    const variables = {\n      mediaId: this.animeInfo.mediaListEntry.id,\n    };\n\n    return this.apiCall(query, variables);\n  }\n}\n","import { SingleAbstract } from '../singleAbstract';\nimport * as helper from './helper';\nimport { NotAutenticatedError, NotFoundError, UrlNotSupportedError } from '../Errors';\nimport { point10 } from '../ScoreMode/point10';\nimport { point20decimal } from '../ScoreMode/point20decimal';\nimport { smiley4 } from '../ScoreMode/smiley4';\nimport { point10decimal } from '../ScoreMode/point10decimal';\n\nexport class Single extends SingleAbstract {\n  constructor(protected url: string) {\n    super(url);\n    this.logger = con.m(this.shortName, '#d65e43');\n    return this;\n  }\n\n  private animeInfo: any;\n\n  listI() {\n    return this.animeInfo.data[0];\n  }\n\n  animeI() {\n    return this.animeInfo.included[0];\n  }\n\n  shortName = 'Kitsu';\n\n  authenticationUrl = 'https://kitsu.app/404?mal-sync=authentication';\n\n  protected handleUrl(url) {\n    if (url.match(/kitsu\\.app\\/(anime|manga)\\/.*/i)) {\n      this.type = utils.urlPart(url, 3) === 'anime' ? 'anime' : 'manga';\n      this.ids.kitsu.slug = utils.urlPart(url, 4);\n      return;\n    }\n    if (url.match(/myanimelist\\.net\\/(anime|manga)\\/\\d*/i)) {\n      this.type = utils.urlPart(url, 3) === 'anime' ? 'anime' : 'manga';\n      this.ids.mal = Number(utils.urlPart(url, 4));\n      return;\n    }\n    throw new UrlNotSupportedError(url);\n  }\n\n  getCacheKey() {\n    return this.getKey(['KITSU']);\n  }\n\n  getPageId() {\n    return this.ids.kitsu.id;\n  }\n\n  _getStatus() {\n    if (this.listI().attributes.reconsuming && this.listI().attributes.status === 'current')\n      return 23;\n    return parseInt(helper.translateList(this.listI().attributes.status));\n  }\n\n  _setStatus(status) {\n    if (status === 23) {\n      status = 1;\n      this.listI().attributes.reconsuming = true;\n    } else {\n      this.listI().attributes.reconsuming = false;\n    }\n    this.listI().attributes.status = helper.translateList(status, parseInt(status.toString()));\n  }\n\n  _getScore() {\n    if (!this.listI().attributes.ratingHundred) return 0;\n    const score = Math.round(this.listI().attributes.ratingHundred / 10);\n    if (score === 0) return 1;\n    return score;\n  }\n\n  _setScore(score) {\n    if (!score) {\n      this.listI().attributes.ratingHundred = null;\n      return;\n    }\n    this.listI().attributes.ratingHundred = score * 10;\n  }\n\n  _getAbsoluteScore() {\n    return Number(this.listI().attributes.ratingHundred);\n  }\n\n  _setAbsoluteScore(score) {\n    this.listI().attributes.ratingHundred = Number(score);\n  }\n\n  _getTwentyScore() {\n    const score = this.listI().attributes.ratingHundred;\n    if (!score) return null;\n    if (score < 5) return 1;\n    return Math.round(score / 5);\n  }\n\n  _getEpisode() {\n    return this.listI().attributes.progress;\n  }\n\n  _setEpisode(episode) {\n    this.listI().attributes.progress = parseInt(`${episode}`);\n  }\n\n  _getVolume() {\n    return this.listI().attributes.volumesOwned;\n  }\n\n  _setVolume(volume) {\n    this.listI().attributes.volumesOwned = volume;\n  }\n\n  _getTags() {\n    let tags = this.listI().attributes.notes;\n    if (tags === null || tags === 'null') tags = '';\n    return tags;\n  }\n\n  _setTags(tags) {\n    this.listI().attributes.notes = tags;\n  }\n\n  _getTitle() {\n    try {\n      return helper.getTitle(\n        this.animeI().attributes.titles,\n        this.animeI().attributes.canonicalTitle,\n      );\n    } catch (e) {\n      console.error('title', e);\n      return 'Failed';\n    }\n  }\n\n  _getTotalEpisodes() {\n    const eps = this.animeI().attributes.episodeCount\n      ? this.animeI().attributes.episodeCount\n      : this.animeI().attributes.chapterCount;\n    if (eps === null) return 0;\n    return eps;\n  }\n\n  _getTotalVolumes() {\n    const vol = this.animeI().attributes.volumeCount;\n    if (!vol) return 0;\n    return vol;\n  }\n\n  _getDisplayUrl() {\n    return `https://kitsu.app/${this.getType()}/${this.animeI().attributes.slug}`;\n  }\n\n  _getImage() {\n    return this.animeI().attributes.posterImage && this.animeI().attributes.posterImage.large\n      ? this.animeI().attributes.posterImage.large\n      : '';\n  }\n\n  _getRating() {\n    if (this.animeI().attributes.averageRating === null) return Promise.resolve('');\n    return Promise.resolve(`${this.animeI().attributes.averageRating}%`);\n  }\n\n  async _update() {\n    if (Number.isNaN(this.ids.mal)) {\n      /* eslint-disable-next-line no-var */\n      var kitsuSlugRes = await this.kitsuSlugtoKitsu(this.ids.kitsu.slug, this.getType());\n      try {\n        this.ids.kitsu.id = Number(kitsuSlugRes.res.data[0].id);\n        this.ids.mal = Number(kitsuSlugRes.malId);\n      } catch (e) {\n        this._authenticated = true;\n        throw new NotFoundError('Not found');\n      }\n    }\n    if (Number.isNaN(this.ids.kitsu.id)) {\n      /* eslint-disable-next-line no-var */\n      var kitsuRes = await this.malToKitsu(this.ids.mal, this.getType());\n      try {\n        const relation = kitsuRes.data.find(\n          item => item.relationships.item.data.type === this.getType(),\n        );\n        if (!relation) throw new NotFoundError('Not found');\n        this.ids.kitsu.id = Number(relation.relationships.item.data.id);\n      } catch (e) {\n        this._authenticated = true;\n        throw new NotFoundError(`No entry found for malId ${this.ids.mal}`);\n      }\n    }\n\n    this._authenticated = true;\n    return this.userId()\n      .then(userId => {\n        return this.apiCall(\n          'GET',\n          `https://kitsu.app/api/edge/library-entries?filter[user_id]=${userId}&filter[kind]=${this.getType()}&filter[${this.getType()}_id]=${\n            this.ids.kitsu.id\n          }&page[limit]=1&page[limit]=1&include=${this.getType()}&fields[${this.getType()}]=slug,titles,canonicalTitle,averageRating,posterImage,${\n            this.getType() === 'anime' ? 'episodeCount' : 'chapterCount,volumeCount'\n          }`,\n        );\n      })\n      .catch(e => {\n        if (e instanceof NotAutenticatedError) {\n          this._authenticated = false;\n          return { data: [], included: [] };\n        }\n        throw e;\n      })\n      .then(async res => {\n        const tempAnimeInfo = res;\n\n        this._onList = true;\n\n        if (!res.data.length) {\n          this._onList = false;\n          tempAnimeInfo.data[0] = {\n            attributes: {\n              notes: '',\n              progress: 0,\n              volumesOwned: 0,\n              reconsuming: false,\n              reconsumeCount: false,\n              ratingTwenty: null,\n              status: 'planned',\n            },\n          };\n          if (typeof kitsuRes !== 'undefined') {\n            tempAnimeInfo.included = kitsuRes.included;\n          } else if (kitsuSlugRes) {\n            tempAnimeInfo.included = kitsuSlugRes.res.data;\n          } else {\n            kitsuRes = await this.malToKitsu(this.ids.mal, this.getType());\n            tempAnimeInfo.included = kitsuRes.included;\n          }\n        }\n\n        if (tempAnimeInfo.data[0].attributes.ratingHundred) {\n          tempAnimeInfo.data[0].attributes.ratingHundred = 0;\n        } else {\n          tempAnimeInfo.data[0].attributes.ratingHundred = Number(\n            tempAnimeInfo.data[0].attributes.ratingTwenty * 5,\n          );\n        }\n\n        this.animeInfo = tempAnimeInfo;\n\n        try {\n          this.animeI();\n        } catch (e) {\n          this.logger.error(e);\n          throw new NotFoundError('Not found');\n        }\n\n        if (!this._authenticated) throw new NotAutenticatedError('Not Authenticated');\n      });\n  }\n\n  async _sync() {\n    const variables: any = {\n      data: {\n        attributes: {\n          notes: this.listI().attributes.notes,\n          progress: this.listI().attributes.progress,\n          volumesOwned: this.listI().attributes.volumesOwned,\n          reconsuming: this.listI().attributes.reconsuming,\n          reconsumeCount: this.listI().attributes.reconsumeCount,\n          ratingTwenty: this._getTwentyScore(),\n          status: this.listI().attributes.status,\n        },\n        type: 'library-entries',\n      },\n    };\n    const tType = this.getType();\n    if (!tType) return Promise.resolve();\n    let updateUrl;\n    let post;\n    if (this.isOnList()) {\n      updateUrl = `https://kitsu.app/api/edge/library-entries/${this.listI().id}`;\n      variables.data.id = this.listI().id;\n      post = 'PATCH';\n    } else {\n      updateUrl = 'https://kitsu.app/api/edge/library-entries/';\n      variables.data.relationships = {\n        [tType]: {\n          data: {\n            type: tType,\n            id: this.ids.kitsu.id,\n          },\n        },\n        user: {\n          data: {\n            type: 'users',\n            id: await this.userId(),\n          },\n        },\n      };\n      post = 'POST';\n    }\n\n    this.logger.log(post, variables);\n\n    return this.apiCall(post, updateUrl, variables).then(res => {\n      if (res && res.data && res.data.id) {\n        this.listI().id = res.data.id;\n      }\n      return res;\n    });\n  }\n\n  protected apiCall(\n    mode: 'GET' | 'POST' | 'DELETE' | 'PUT',\n    url,\n    variables = {},\n    authentication = true,\n  ) {\n    return helper.apiCall(mode, url, variables, authentication).catch(e => {\n      if (e instanceof NotAutenticatedError) throw new NotAutenticatedError(e.message);\n      throw e;\n    });\n  }\n\n  protected kitsuSlugtoKitsu(kitsuSlug: string, type: any) {\n    return this.apiCall(\n      'GET',\n      `https://kitsu.app/api/edge/${type}?filter[slug]=${kitsuSlug}&page[limit]=1&include=mappings`,\n      {},\n    )\n      .catch(e => {\n        if (e instanceof NotAutenticatedError) {\n          this._authenticated = false;\n          return this.apiCall(\n            'GET',\n            `https://kitsu.app/api/edge/${type}?filter[slug]=${kitsuSlug}&page[limit]=1&include=mappings`,\n            {},\n            false,\n          );\n        }\n        throw e;\n      })\n      .then(res => {\n        let malId = NaN;\n        if (typeof res !== 'undefined' && typeof res.included !== 'undefined') {\n          for (let k = 0; k < res.included.length; k++) {\n            const mapping = res.included[k];\n            if (mapping.type === 'mappings') {\n              if (mapping.attributes.externalSite === `myanimelist/${type}`) {\n                malId = Number(mapping.attributes.externalId);\n                res.included.splice(k, 1);\n                break;\n              } else if (mapping.attributes.externalSite === `anilist/${type}`) {\n                this.ids.ani = Number(mapping.attributes.externalId);\n              }\n            }\n          }\n        }\n        return { res, malId };\n      });\n  }\n\n  protected malToKitsu(malid: number, type: any) {\n    return this.apiCall(\n      'GET',\n      `https://kitsu.app/api/edge/mappings?filter[externalSite]=myanimelist/${type}&filter[externalId]=${malid}&include=item&fields[item]=id`,\n      {},\n    )\n      .catch(e => {\n        if (e instanceof NotAutenticatedError) {\n          this._authenticated = false;\n          return this.apiCall(\n            'GET',\n            `https://kitsu.app/api/edge/mappings?filter[externalSite]=myanimelist/${type}&filter[externalId]=${malid}&include=item&fields[item]=id`,\n            {},\n            false,\n          );\n        }\n        throw e;\n      })\n      .then(res => {\n        return res;\n      });\n  }\n\n  protected async userId() {\n    const userId = await api.storage.get('kitsuUserId');\n    if (typeof userId !== 'undefined' && userId) {\n      return userId;\n    }\n    return this.apiCall('GET', 'https://kitsu.app/api/edge/users?filter[self]=true').then(res => {\n      if (\n        typeof res.data === 'undefined' ||\n        !res.data.length ||\n        typeof res.data[0] === 'undefined'\n      ) {\n        throw new NotAutenticatedError('Not Authenticated');\n      }\n      api.storage.set('kitsuUserId', res.data[0].id);\n      return res.data[0].id;\n    });\n  }\n\n  public getScoreMode() {\n    switch (api.settings.get('kitsuOptions').ratingSystem) {\n      case 'simple':\n        return smiley4;\n      case 'regular':\n        return point10decimal;\n      case 'advanced':\n        return point20decimal;\n      default:\n        return point10;\n    }\n  }\n\n  _delete() {\n    return this.apiCall('DELETE', `https://kitsu.app/api/edge/library-entries/${this.listI().id}`);\n  }\n}\n","import { SingleAbstract } from '../singleAbstract';\nimport { UrlNotSupportedError } from '../Errors';\n\n// local://crunchyroll/anime/nogamenolife\n\nexport class Single extends SingleAbstract {\n  constructor(protected url: string) {\n    super(url);\n    this.logger = con.m(this.shortName, 'black');\n    return this;\n  }\n\n  private animeInfo: any;\n\n  protected key!: string;\n\n  protected id!: string;\n\n  protected page!: string;\n\n  protected title!: string;\n\n  shortName = 'Local';\n\n  authenticationUrl = '';\n\n  protected handleUrl(url) {\n    if (url.match(/local:\\/\\/.*/i)) {\n      this.id = utils.urlPart(url, 4);\n      this.type = utils.urlPart(url, 3) === 'anime' ? 'anime' : 'manga';\n      this.page = utils.urlPart(url, 2);\n      this.key = `local://${this.page}/${this.type}/${this.id}`;\n\n      if (utils.urlPart(url, 5)) {\n        this.title = decodeURIComponent(utils.urlPart(url, 5));\n      } else {\n        this.title = 'Unknown';\n      }\n      return;\n    }\n    throw new UrlNotSupportedError(url);\n  }\n\n  getCacheKey() {\n    return `local:${this.id}:${this.page}`;\n  }\n\n  getPageId() {\n    return this.getCacheKey();\n  }\n\n  _getStatus() {\n    return this.animeInfo.status;\n  }\n\n  _setStatus(status) {\n    this.animeInfo.status = status;\n  }\n\n  _getScore() {\n    return this.animeInfo.score;\n  }\n\n  _setScore(score) {\n    this.animeInfo.score = score;\n  }\n\n  _getAbsoluteScore() {\n    return this.getScore() * 10;\n  }\n\n  _setAbsoluteScore(score) {\n    if (!score) {\n      this.setScore(0);\n      return;\n    }\n    if (score < 10) {\n      this.setScore(1);\n      return;\n    }\n\n    this.setScore(Math.round(score / 10));\n  }\n\n  _getEpisode() {\n    return this.animeInfo.progress;\n  }\n\n  _setEpisode(episode) {\n    this.animeInfo.progress = parseInt(`${episode}`);\n  }\n\n  _getVolume() {\n    return this.animeInfo.volumeprogress;\n  }\n\n  _setVolume(volume) {\n    this.animeInfo.volumeprogress = volume;\n  }\n\n  _getTags() {\n    let { tags } = this.animeInfo;\n    if (!tags) tags = '';\n    return tags;\n  }\n\n  _setTags(tags) {\n    this.animeInfo.tags = tags;\n  }\n\n  _getTitle(raw = false) {\n    if (raw) return this.animeInfo.name;\n    return `[L] ${this.animeInfo.name}`;\n  }\n\n  _getTotalEpisodes() {\n    return 0;\n  }\n\n  _getTotalVolumes() {\n    return 0;\n  }\n\n  _getDisplayUrl() {\n    return 'https://github.com/MALSync/MALSync/wiki/Local-Sync';\n  }\n\n  _getImage() {\n    if (this.animeInfo && this.animeInfo.image) return this.animeInfo.image;\n    return '';\n  }\n\n  setImage(url: string) {\n    this.animeInfo.image = url;\n    if (this._onList) this.sync();\n  }\n\n  _getRating() {\n    return Promise.resolve('Local');\n  }\n\n  async _update() {\n    this._authenticated = true;\n\n    this.animeInfo = await api.storage.get(this.key);\n\n    this._onList = true;\n\n    if (!this.animeInfo) {\n      this._onList = false;\n      this.animeInfo = {\n        name: this.title,\n        tags: '',\n        sUrl: '',\n        image: '',\n        progress: 0,\n        volumeprogress: 0,\n        score: 0,\n        status: 6,\n      };\n    }\n  }\n\n  async _sync() {\n    return api.storage.set(this.key, this.animeInfo);\n  }\n\n  _delete() {\n    return api.storage.remove(this.key);\n  }\n\n  // Overload\n  setStreamingUrl(streamingUrl: string): SingleAbstract {\n    if (this.animeInfo && streamingUrl) this.animeInfo.sUrl = streamingUrl;\n    return super.setStreamingUrl(streamingUrl);\n  }\n\n  getStreamingUrl(): string | undefined {\n    if (this.animeInfo && this.animeInfo.sUrl) return this.animeInfo.sUrl;\n    return super.getStreamingUrl();\n  }\n}\n","import { SingleAbstract } from '../singleAbstract';\nimport { NotAutenticatedError, UrlNotSupportedError } from '../Errors';\nimport * as helper from './helper';\nimport { malToAnilist } from '../AniList/helper';\nimport { Cache } from '../../utils/Cache';\nimport { returnYYYYMMDD } from '../../utils/general';\n\nexport class Single extends SingleAbstract {\n  constructor(protected url: string) {\n    super(url);\n    this.logger = con.m(this.shortName, '#2e51a2');\n    return this;\n  }\n\n  private animeInfo: any;\n\n  private displayUrl = '';\n\n  private pending = false;\n\n  shortName = 'MAL';\n\n  authenticationUrl = helper.authenticationUrl;\n\n  protected handleUrl(url) {\n    if (url.match(/myanimelist\\.net\\/(anime|manga)\\/\\d*/i)) {\n      this.type = utils.urlPart(url, 3) === 'anime' ? 'anime' : 'manga';\n      this.ids.mal = Number(utils.urlPart(url, 4));\n      return;\n    }\n    throw new UrlNotSupportedError(url);\n  }\n\n  getCacheKey() {\n    return this.ids.mal;\n  }\n\n  getPageId() {\n    return this.ids.mal;\n  }\n\n  _getStatus() {\n    let curSt;\n    if (this.type === 'manga') {\n      curSt = parseInt(helper.mangaStatus[this.animeInfo.my_list_status.status]);\n    } else {\n      curSt = parseInt(helper.animeStatus[this.animeInfo.my_list_status.status]);\n    }\n    if (this.getRewatching() && curSt === 2) return 23;\n    return curSt;\n  }\n\n  _setStatus(status) {\n    if (status === 23) {\n      status = 2;\n      this.setRewatching(true);\n    } else {\n      this.setRewatching(false);\n    }\n    if (this.type === 'manga') {\n      this.animeInfo.my_list_status.status = helper.mangaStatus[status];\n      return;\n    }\n    this.animeInfo.my_list_status.status = helper.animeStatus[status];\n  }\n\n  increaseRewatchCount(): void {\n    if (this.type === 'manga') {\n      this.animeInfo.my_list_status.num_times_reread++;\n    } else {\n      this.animeInfo.my_list_status.num_times_rewatched++;\n    }\n  }\n\n  _getScore() {\n    return this.animeInfo.my_list_status.score;\n  }\n\n  _setScore(score) {\n    this.animeInfo.my_list_status.score = score;\n  }\n\n  _getAbsoluteScore() {\n    return this.getScore() * 10;\n  }\n\n  _setAbsoluteScore(score) {\n    if (!score) {\n      this.setScore(0);\n      return;\n    }\n    if (score < 10) {\n      this.setScore(1);\n      return;\n    }\n\n    this.setScore(Math.round(score / 10));\n  }\n\n  _getEpisode() {\n    if (this.type === 'manga') {\n      return this.animeInfo.my_list_status.num_chapters_read;\n    }\n    return this.animeInfo.my_list_status.num_watched_episodes;\n  }\n\n  _setEpisode(episode) {\n    if (!episode) episode = 0;\n    if (this.type === 'manga') {\n      this.animeInfo.my_list_status.num_chapters_read = episode;\n      return;\n    }\n    this.animeInfo.my_list_status.num_watched_episodes = episode;\n  }\n\n  _getVolume() {\n    if (this.type === 'manga') {\n      return this.animeInfo.my_list_status.num_volumes_read;\n    }\n    return 0;\n  }\n\n  _setVolume(volume) {\n    if (this.type === 'manga') {\n      this.animeInfo.my_list_status.num_volumes_read = volume;\n    }\n  }\n\n  _getTags() {\n    if (!this.animeInfo.my_list_status.tags.length) {\n      return '';\n    }\n    return this.animeInfo.my_list_status.tags.join(',');\n  }\n\n  _setTags(tags) {\n    if (!tags || tags.trim() === ',') {\n      this.animeInfo.my_list_status.tags = [];\n      return;\n    }\n    this.animeInfo.my_list_status.tags = tags.split(',');\n  }\n\n  private getRewatching(): boolean {\n    if (this.type === 'manga') {\n      return this.animeInfo.my_list_status.is_rereading;\n    }\n    return this.animeInfo.my_list_status.is_rewatching;\n  }\n\n  private setRewatching(state: boolean) {\n    if (this.type === 'manga') {\n      this.animeInfo.my_list_status.is_rereading = state;\n      return;\n    }\n    this.animeInfo.my_list_status.is_rewatching = state;\n  }\n\n  _getTitle() {\n    return this.animeInfo.title;\n  }\n\n  _getTotalEpisodes() {\n    if (this.type === 'manga') {\n      return this.animeInfo.num_chapters;\n    }\n    return this.animeInfo.num_episodes;\n  }\n\n  _getTotalVolumes() {\n    if (this.type === 'manga') {\n      return this.animeInfo.num_volumes;\n    }\n    return 0;\n  }\n\n  _getDisplayUrl() {\n    return this.url;\n  }\n\n  _getImage() {\n    return this.animeInfo.main_picture?.medium ?? '';\n  }\n\n  _getRating() {\n    return Promise.resolve(this.animeInfo.mean);\n  }\n\n  async _update() {\n    return this.apiCall({\n      type: 'GET',\n      path: `${this.type}/${this.ids.mal}`,\n      fields: [\n        'my_list_status{tags,is_rewatching,is_rereading,num_times_rewatched,num_times_reread,start_date,finish_date}',\n        'num_episodes',\n        'mean',\n        // Manga\n        'num_chapters',\n        'num_volumes',\n      ],\n    })\n      .catch(e => {\n        if (e instanceof NotAutenticatedError) {\n          this._authenticated = false;\n        }\n        throw e;\n      })\n      .then(res => {\n        this.logger.m('Api').log(res);\n        this._authenticated = true;\n        this.animeInfo = res;\n        this._onList = true;\n        if (!this.animeInfo.my_list_status) {\n          this._onList = false;\n          if (this.type === 'manga') {\n            this.animeInfo.my_list_status = {\n              is_rereading: false,\n              num_chapters_read: 0,\n              num_volumes_read: 0,\n              score: 0,\n              status: 'plan_to_read',\n              tags: [],\n            };\n          } else {\n            this.animeInfo.my_list_status = {\n              is_rewatching: false,\n              num_watched_episodes: 0,\n              score: 0,\n              status: 'plan_to_watch',\n              tags: [],\n            };\n          }\n        }\n\n        // Handle api bug\n        if (\n          this.animeInfo.my_list_status &&\n          typeof this.animeInfo.my_list_status.num_episodes_watched !== 'undefined'\n        ) {\n          this.animeInfo.my_list_status.num_watched_episodes =\n            this.animeInfo.my_list_status.num_episodes_watched;\n          delete this.animeInfo.my_list_status.num_episodes_watched;\n        }\n      });\n  }\n\n  async _sync() {\n    if (\n      typeof this.animeInfo.my_list_status.start_date === 'undefined' &&\n      this._getStatus() === 1 &&\n      this._getEpisode() > 0\n    ) {\n      this.animeInfo.my_list_status.start_date = returnYYYYMMDD();\n    }\n\n    if (\n      typeof this.animeInfo.my_list_status.finish_date === 'undefined' &&\n      this._getStatus() === 2\n    ) {\n      this.animeInfo.my_list_status.finish_date = returnYYYYMMDD();\n\n      if (typeof this.animeInfo.my_list_status.start_date === 'undefined') {\n        this.animeInfo.my_list_status.start_date = returnYYYYMMDD();\n      }\n    }\n\n    const sentData = {};\n    for (const property in this.animeInfo.my_list_status) {\n      switch (property) {\n        case 'priority':\n        case 'num_watched_episodes':\n        case 'num_volumes_read':\n        case 'num_chapters_read':\n        case 'score':\n        case 'is_rewatching':\n        case 'is_rereading':\n        case 'num_times_rewatched':\n        case 'num_times_reread':\n        case 'rewatch_value':\n        case 'reread_value':\n        case 'tags':\n        case 'comments':\n        case 'status':\n        case 'start_date':\n        case 'finish_date':\n          sentData[property] = this.animeInfo.my_list_status[property];\n          break;\n        default:\n      }\n    }\n    this.logger.m('Sync').log(this.ids.mal, sentData);\n    return this.apiCall({\n      type: 'PUT',\n      path: `${this.type}/${this.ids.mal}/my_list_status`,\n      dataObj: sentData,\n    }).then(res => {\n      this.logger.m('Sync').log('res', res);\n    });\n  }\n\n  _delete() {\n    return this.apiCall({\n      type: 'DELETE',\n      path: `${this.type}/${this.ids.mal}/my_list_status`,\n    });\n  }\n\n  public async fillRelations(): Promise<void> {\n    const cacheObj = new Cache(\n      `fillRelations/${this.ids.mal}/${this.getType()}`,\n      7 * 24 * 60 * 60 * 1000,\n    );\n\n    return cacheObj.hasValueAndIsNotEmpty().then(exists => {\n      if (!exists) {\n        return malToAnilist(this.ids.mal, this.getType()!).then(el => {\n          if (el && parseInt(el)) {\n            this.ids.ani = parseInt(el);\n          }\n          return cacheObj.setValue({ da: el });\n        });\n      }\n      return cacheObj.getValue().then(res => {\n        if (res && res.da && parseInt(res.da)) {\n          this.ids.ani = parseInt(res.da);\n        }\n      });\n    });\n  }\n\n  apiCall = helper.apiCall;\n}\n","import { Single as temp } from '../MyAnimeList_api/single';\n\nexport const Single = temp;\n","import { ScoreModeStrategy } from './ScoreModeStrategy';\n\nexport const point10: ScoreModeStrategy = {\n  ui: {\n    module: 'dropdown',\n  },\n  getOptions() {\n    return [\n      { value: 0, label: api.storage.lang('UI_Score_Not_Rated') },\n      { value: 100, label: api.storage.lang('UI_Score_Masterpiece') },\n      { value: 90, label: api.storage.lang('UI_Score_Great') },\n      { value: 80, label: api.storage.lang('UI_Score_VeryGood') },\n      { value: 70, label: api.storage.lang('UI_Score_Good') },\n      { value: 60, label: api.storage.lang('UI_Score_Fine') },\n      { value: 50, label: api.storage.lang('UI_Score_Average') },\n      { value: 40, label: api.storage.lang('UI_Score_Bad') },\n      { value: 30, label: api.storage.lang('UI_Score_VeryBad') },\n      { value: 20, label: api.storage.lang('UI_Score_Horrible') },\n      { value: 10, label: api.storage.lang('UI_Score_Appalling') },\n    ];\n  },\n  valueToOptionValue(value) {\n    if (!value) return 0;\n    if (value < 10) return 10;\n    return Math.round(value / 10) * 10;\n  },\n  optionValueToValue(optionValue) {\n    if (!optionValue) return 0;\n    return Number(optionValue);\n  },\n};\n","import { ScoreModeStrategy } from './ScoreModeStrategy';\n\nexport const point100: ScoreModeStrategy = {\n  ui: {\n    module: 'input',\n    pattern: '^([0-9]{1,2}|100)$',\n  },\n  getOptions() {\n    const resArr = [{ value: 0, label: api.storage.lang('UI_Score_Not_Rated') }];\n    for (let i = 1; i < 101; i++) {\n      resArr.push({ value: i, label: String(i) });\n    }\n    return resArr;\n  },\n  valueToOptionValue(value) {\n    if (!value) return 0;\n    return Number(value);\n  },\n  optionValueToValue(optionValue) {\n    if (!optionValue) return 0;\n    return Number(optionValue);\n  },\n};\n","import { ScoreModeStrategy } from './ScoreModeStrategy';\n\nexport const point100decimal: ScoreModeStrategy = {\n  ui: {\n    module: 'input',\n    pattern: '^([0-9](\\\\.[0-9]?)?|10(.0)?)$',\n  },\n  getOptions() {\n    const resArr = [{ value: 0, label: api.storage.lang('UI_Score_Not_Rated') }];\n    for (let i = 1; i < 101; i++) {\n      resArr.push({ value: i / 10, label: (i / 10).toFixed(1) });\n    }\n    return resArr;\n  },\n  valueToOptionValue(value) {\n    if (!value) return 0;\n    return Number(value / 10);\n  },\n  optionValueToValue(optionValue) {\n    if (!optionValue) return 0;\n    return Number(optionValue * 10);\n  },\n};\n","import { ScoreModeStrategy } from './ScoreModeStrategy';\n\nexport const point10decimal: ScoreModeStrategy = {\n  ui: {\n    module: 'dropdown',\n  },\n  getOptions() {\n    const resArr = [{ value: 0, label: api.storage.lang('UI_Score_Not_Rated') }];\n    for (let i = 1; i < 11; i++) {\n      resArr.push({\n        value: i * 10,\n        label: (i / 2).toFixed(1).toString(),\n      });\n    }\n    return resArr;\n  },\n  valueToOptionValue(value) {\n    if (!value) return 0;\n    if (value < 10) return 10;\n    return Math.round(value / 10) * 10;\n  },\n  optionValueToValue(optionValue) {\n    if (!optionValue) return 0;\n    return Number(optionValue);\n  },\n};\n","import { ScoreModeStrategy } from './ScoreModeStrategy';\n\nexport const point20decimal: ScoreModeStrategy = {\n  ui: {\n    module: 'dropdown',\n  },\n  getOptions() {\n    const resArr = [{ value: 0, label: api.storage.lang('UI_Score_Not_Rated') }];\n    for (let i = 2; i < 21; i++) {\n      resArr.push({\n        value: i * 5,\n        label: (i / 2).toFixed(1).toString(),\n      });\n    }\n    return resArr;\n  },\n  valueToOptionValue(value) {\n    if (!value) return 0;\n    if (value < 10) return 10;\n    return Math.round(Number(value) / 5) * 5;\n  },\n  optionValueToValue(optionValue) {\n    if (!optionValue) return 0;\n    return Number(optionValue);\n  },\n};\n","import { ScoreModeStrategy } from './ScoreModeStrategy';\n\nexport const smiley3: ScoreModeStrategy = {\n  ui: {\n    module: 'click',\n    type: 'smiley',\n  },\n  getOptions() {\n    return [\n      { value: 0, label: api.storage.lang('UI_Score_Not_Rated') },\n      { value: 85, label: '🙂' },\n      { value: 60, label: '😐' },\n      { value: 35, label: '🙁' },\n    ];\n  },\n  valueToOptionValue(value) {\n    if (!value) return 0;\n    if (value >= 73) return 85;\n    if (value <= 47) return 35;\n    return 60;\n  },\n  optionValueToValue(optionValue) {\n    if (!optionValue) return 0;\n    return Number(optionValue);\n  },\n};\n","import { ScoreModeStrategy } from './ScoreModeStrategy';\n\nexport const smiley4: ScoreModeStrategy = {\n  ui: {\n    module: 'click',\n    type: 'smiley',\n  },\n  getOptions() {\n    return [\n      { value: 0, label: api.storage.lang('UI_Score_Not_Rated') },\n      { value: 100, label: '😀' },\n      { value: 70, label: '🙂' },\n      { value: 40, label: '😐' },\n      { value: 10, label: '🙁' },\n    ];\n  },\n  valueToOptionValue(value) {\n    if (!value) return 0;\n    if (value < 25) return 10;\n    if (value < 55) return 40;\n    if (value < 85) return 70;\n    return 100;\n  },\n  optionValueToValue(optionValue) {\n    if (!optionValue) return 0;\n    return Number(optionValue);\n  },\n};\n","import { ScoreModeStrategy } from './ScoreModeStrategy';\n\nexport const stars5: ScoreModeStrategy = {\n  ui: {\n    module: 'click',\n    type: 'star',\n  },\n  getOptions() {\n    return [\n      { value: 0, label: api.storage.lang('UI_Score_Not_Rated') },\n      { value: 90, label: '★★★★★' },\n      { value: 70, label: '★★★★' },\n      { value: 50, label: '★★★' },\n      { value: 30, label: '★★' },\n      { value: 10, label: '★' },\n    ];\n  },\n  valueToOptionValue(value) {\n    if (!value) return 0;\n    if (value < 20) return 10;\n    if (value < 40) return 30;\n    if (value < 60) return 50;\n    if (value < 80) return 70;\n    return 90;\n  },\n  optionValueToValue(optionValue) {\n    if (!optionValue) return 0;\n    return Number(optionValue);\n  },\n};\n","import { SingleAbstract } from '../singleAbstract';\nimport * as helper from './helper';\nimport { NotFoundError, UrlNotSupportedError } from '../Errors';\nimport { point10 } from '../ScoreMode/point10';\n\nexport class Single extends SingleAbstract {\n  constructor(protected url: string) {\n    super(url);\n    this.logger = con.m(this.shortName, '#3db4f2');\n    return this;\n  }\n\n  private animeMeta?: helper.MetaRequest;\n\n  private animeInfo?: helper.StatusRequest;\n\n  shortName = 'Shiki';\n\n  authenticationUrl = helper.authUrl;\n\n  protected handleUrl(url) {\n    if (url.match(/shikimori\\.one\\/(animes|mangas|ranobe)\\/\\D?\\d+/i)) {\n      this.type = utils.urlPart(url, 3) === 'animes' ? 'anime' : 'manga';\n      const res = utils.urlPart(url, 4).match(/^\\D?(\\d+)/);\n      if (res && res[1]) {\n        this.ids.mal = Number(res[1]);\n        return;\n      }\n    }\n    if (url.match(/myanimelist\\.net\\/(anime|manga)\\/\\d*/i)) {\n      this.type = utils.urlPart(url, 3) === 'anime' ? 'anime' : 'manga';\n      this.ids.mal = Number(utils.urlPart(url, 4));\n      return;\n    }\n    throw new UrlNotSupportedError(url);\n  }\n\n  getCacheKey() {\n    return this.ids.mal;\n  }\n\n  getPageId() {\n    return this.ids.mal;\n  }\n\n  _getStatus() {\n    return helper.statusTranslate[this.animeInfo!.status];\n  }\n\n  _setStatus(status) {\n    this.animeInfo!.status = helper.statusTranslate[status] as helper.StatusType;\n  }\n\n  _getScore() {\n    return this.animeInfo!.score;\n  }\n\n  _setScore(score) {\n    this.animeInfo!.score = score;\n  }\n\n  _getAbsoluteScore() {\n    return this.getScore() * 10;\n  }\n\n  _setAbsoluteScore(score) {\n    if (!score) {\n      this.setScore(0);\n      return;\n    }\n    if (score < 10) {\n      this.setScore(1);\n      return;\n    }\n\n    this.setScore(Math.round(score / 10));\n  }\n\n  _getEpisode() {\n    if (this.type === 'manga') {\n      return this.animeInfo!.chapters;\n    }\n    return this.animeInfo!.episodes;\n  }\n\n  _setEpisode(episode) {\n    if (this.type === 'manga') {\n      this.animeInfo!.chapters = parseInt(`${episode}`);\n      return;\n    }\n    this.animeInfo!.episodes = parseInt(`${episode}`);\n  }\n\n  _getVolume() {\n    return this.animeInfo!.volumes;\n  }\n\n  _setVolume(volume) {\n    this.animeInfo!.volumes = volume;\n  }\n\n  _getTags() {\n    let tags = this.animeInfo!.text;\n    if (tags === null || tags === 'null') tags = '';\n    return tags;\n  }\n\n  _setTags(tags) {\n    this.animeInfo!.text = tags;\n  }\n\n  _getTitle() {\n    return helper.title(this.animeMeta!.russian, this.animeMeta!.name);\n  }\n\n  _getTotalEpisodes() {\n    const eps = this.type === 'anime' ? this.animeMeta!.episodes : this.animeMeta!.chapters;\n    if (!eps) return 0;\n    return eps;\n  }\n\n  _getTotalVolumes() {\n    const vol = this.animeMeta!.volumes;\n    if (!vol) return 0;\n    return vol;\n  }\n\n  _getDisplayUrl() {\n    return this.animeMeta!.url ? `${helper.domain}${this.animeMeta!.url}` : this.url;\n  }\n\n  _getImage() {\n    return this.animeMeta!.image.preview ? `${helper.domain}${this.animeMeta!.image.preview}` : '';\n  }\n\n  _getRating() {\n    return Promise.resolve(this.animeMeta!.score);\n  }\n\n  async _update() {\n    const userId = await helper.userId();\n\n    const metadata = await helper.apiCall({\n      path: `${this.type}s/${this.ids.mal}`,\n      type: 'GET',\n    });\n\n    if (!metadata.id) {\n      throw new NotFoundError(this.url);\n    }\n\n    this.animeMeta = metadata;\n\n    const rating = await helper.apiCall({\n      path: `v2/user_rates`,\n      type: 'GET',\n      parameter: {\n        target_id: this.ids.mal,\n        user_id: userId,\n        target_type: this.type === 'anime' ? 'Anime' : 'Manga',\n      },\n    });\n\n    if (!rating.length) {\n      this._onList = false;\n      this.animeInfo = {\n        user_id: userId,\n        target_id: this.ids.mal,\n        target_type: this.type === 'anime' ? 'Anime' : 'Manga',\n        score: 0,\n        status: 'planned',\n        rewatches: 0,\n        episodes: 0,\n        volumes: 0,\n        chapters: 0,\n        text: '',\n      };\n    } else {\n      this._onList = true;\n      [this.animeInfo] = rating;\n    }\n\n    this._authenticated = true;\n\n    return Promise.resolve();\n  }\n\n  async _sync() {\n    const mode = this._onList ? 'PUT' : 'POST';\n    const path = this._onList ? `v2/user_rates/${this.animeInfo!.id}` : 'v2/user_rates';\n\n    return helper.apiCall({\n      type: mode,\n      path,\n      dataObj: {\n        user_rate: this.animeInfo,\n      },\n    });\n  }\n\n  public getScoreMode() {\n    return point10;\n  }\n\n  _delete() {\n    return helper.apiCall({\n      type: 'DELETE',\n      path: `v2/user_rates/${this.animeInfo!.id}`,\n    });\n  }\n}\n","import { SingleAbstract } from '../singleAbstract';\nimport * as helper from './helper';\nimport { NotAutenticatedError, NotFoundError, UrlNotSupportedError } from '../Errors';\n\nexport class Single extends SingleAbstract {\n  constructor(protected url: string) {\n    super(url);\n    this.logger = con.m(this.shortName, '#9b7400');\n    return this;\n  }\n\n  private animeInfo: any;\n\n  private episodeUpdate = false;\n\n  private statusUpdate = false;\n\n  private ratingUpdate = false;\n\n  private minWatchedEp = 1;\n\n  private curWatchedEp = 0;\n\n  shortName = 'Simkl';\n\n  authenticationUrl = helper.getAuthUrl();\n\n  protected rewatchingSupport = false;\n\n  protected handleUrl(url) {\n    if (url.match(/simkl\\.com\\/(anime|manga)\\/\\d*/i)) {\n      this.type = utils.urlPart(url, 3) === 'anime' ? 'anime' : 'manga';\n      this.ids.simkl = parseInt(utils.urlPart(url, 4));\n      if (this.type === 'manga') throw 'Simkl has no manga support';\n      return;\n    }\n    if (url.match(/myanimelist\\.net\\/(anime|manga)\\/\\d*/i)) {\n      this.type = utils.urlPart(url, 3) === 'anime' ? 'anime' : 'manga';\n      this.ids.mal = Number(utils.urlPart(url, 4));\n      if (this.type === 'manga') throw 'Simkl has no manga support';\n      return;\n    }\n    throw new UrlNotSupportedError(url);\n  }\n\n  getCacheKey() {\n    return this.getKey(['SIMKL']);\n  }\n\n  getPageId() {\n    return this.ids.simkl;\n  }\n\n  _getStatus() {\n    return parseInt(helper.translateList(this.animeInfo.status));\n  }\n\n  _setStatus(status) {\n    if (status === 23) status = 1;\n    status = helper.translateList(status, parseInt(status.toString()));\n    if (status !== this.animeInfo.status) this.statusUpdate = true;\n    this.animeInfo.status = status;\n  }\n\n  _getScore() {\n    const score = this.animeInfo.user_rating;\n    if (score === null) return 0;\n    return score;\n  }\n\n  _setScore(score) {\n    if (score === 0) score = null;\n    if (score !== this.animeInfo.user_rating) this.ratingUpdate = true;\n    this.animeInfo.user_rating = score;\n  }\n\n  _getAbsoluteScore() {\n    return this.getScore() * 10;\n  }\n\n  _setAbsoluteScore(score) {\n    if (!score) {\n      this.setScore(0);\n      return;\n    }\n    if (score < 10) {\n      this.setScore(1);\n      return;\n    }\n\n    this.setScore(Math.round(score / 10));\n  }\n\n  _getEpisode() {\n    if (this._getStatus() === 2) return this._getTotalEpisodes();\n    return this.curWatchedEp;\n  }\n\n  _setEpisode(episode) {\n    if (episode !== this.curWatchedEp) this.episodeUpdate = true;\n    this.curWatchedEp = episode;\n  }\n\n  _getVolume() {\n    return 0;\n  }\n\n  _setVolume(volume) {\n    this.logger.error('You cant set Volumes for animes');\n  }\n\n  _getTags() {\n    let tags = this.animeInfo.private_memo;\n    if (tags === null || tags === 'null') tags = '';\n    return tags;\n  }\n\n  _setTags(tags) {\n    this.animeInfo.private_memo = tags;\n  }\n\n  _getTitle() {\n    return this.animeInfo.show.title;\n  }\n\n  _getTotalEpisodes() {\n    const eps = this.animeInfo.total_episodes_count;\n    if (eps === null) return 0;\n    return eps;\n  }\n\n  _getTotalVolumes() {\n    return 0;\n  }\n\n  _getDisplayUrl() {\n    return `https://simkl.com/${this.getType()}/${this.ids.simkl}`;\n  }\n\n  _getImage() {\n    return `https://simkl.in/posters/${this.animeInfo.show.poster}_ca.jpg`;\n  }\n\n  async _getRating() {\n    try {\n      const el = await this.call('https://api.simkl.com/ratings', { simkl: this.ids.simkl }, true);\n      return el.simkl.rating;\n    } catch (e) {\n      this.logger.error(e);\n      return 'N/A';\n    }\n  }\n\n  async _update() {\n    let de;\n    if (Number.isNaN(this.ids.mal)) {\n      de = { simkl: this.ids.simkl };\n    } else {\n      de = { mal: this.ids.mal };\n    }\n\n    this._authenticated = true;\n\n    return this.getSingle(de)\n      .catch(e => {\n        if (e instanceof NotAutenticatedError) {\n          this._authenticated = false;\n          return '';\n        }\n        throw e;\n      })\n      .then(async res => {\n        this.logger.log(res);\n\n        this.episodeUpdate = false;\n        this.statusUpdate = false;\n        this.ratingUpdate = false;\n\n        this.animeInfo = res;\n\n        this._onList = true;\n\n        if (!this.animeInfo) {\n          this._onList = false;\n          let el;\n          if (de.simkl) {\n            el = await this.call(\n              `https://api.simkl.com/anime/${de.simkl}`,\n              { extended: 'full' },\n              true,\n            );\n            if (!el) throw new NotFoundError('Anime not found');\n          } else {\n            el = await this.call('https://api.simkl.com/search/id', de, true);\n            if (!el) throw new NotFoundError('Anime not found');\n            if (el[0].mal && el[0].mal.type && el[0].mal.type === 'Special')\n              throw new Error('Is a special');\n            el = el[0];\n          }\n\n          this.animeInfo = {\n            last_watched: '',\n            last_watched_at: '',\n            next_to_watch: '',\n            not_aired_episodes_count: 0,\n            private_memo: '',\n            status: 'plantowatch',\n            total_episodes_count: 0,\n            user_rating: null,\n            watched_episodes_count: 0,\n            show: el,\n          };\n          this.logger.log('Add anime', this.animeInfo);\n        }\n\n        if (Number.isNaN(this.ids.simkl)) {\n          this.ids.simkl = parseInt(this.animeInfo.show.ids.simkl);\n        }\n\n        if (Number.isNaN(this.ids.mal) && typeof this.animeInfo.show.ids.mal !== 'undefined') {\n          this.ids.mal = this.animeInfo.show.ids.mal;\n        }\n\n        this.curWatchedEp = helper.getEpisode(this.animeInfo.last_watched);\n        if (!this.curWatchedEp && this.animeInfo.next_to_watch) {\n          const next = helper.getEpisode(this.animeInfo.next_to_watch);\n          if (next) this.curWatchedEp = next - 1;\n        }\n        this.minWatchedEp = this.curWatchedEp + 1;\n\n        if (!this._authenticated) throw new NotAutenticatedError('Not Authenticated');\n      });\n  }\n\n  async _sync() {\n    this.logger.log(\n      '[SET] Object:',\n      this.animeInfo,\n      'status',\n      this.statusUpdate,\n      'episode',\n      this.episodeUpdate,\n      'rating',\n      this.ratingUpdate,\n      'minWatchedEp',\n      this.minWatchedEp,\n      'curWatchedEp',\n      this.curWatchedEp,\n    );\n    // Status\n    if (this.statusUpdate || !this.isOnList()) {\n      const response = await this.call(\n        'https://api.simkl.com/sync/add-to-list',\n        JSON.stringify({\n          shows: [\n            {\n              to: this.animeInfo.status,\n              ids: {\n                simkl: this.ids.simkl,\n              },\n            },\n          ],\n        }),\n        false,\n        'POST',\n      );\n      this.logger.log('Status response', response);\n    }\n\n    // Episode and memo\n    if (this.episodeUpdate || !this.isOnList()) {\n      const curEp = this.curWatchedEp;\n      const episodes: { number: number }[] = [];\n\n      if (this.minWatchedEp <= curEp) {\n        if (curEp) {\n          for (let i = this.minWatchedEp; i <= curEp; i++) {\n            episodes.push({\n              number: i,\n            });\n          }\n\n          const response = await this.call(\n            'https://api.simkl.com/sync/history',\n            JSON.stringify({\n              shows: [\n                {\n                  ids: {\n                    simkl: this.ids.simkl,\n                  },\n                  private_memo: this.animeInfo.private_memo,\n                  seasons: [\n                    {\n                      number: 1,\n                      episodes,\n                    },\n                  ],\n                },\n              ],\n            }),\n            false,\n            'POST',\n          );\n          this.logger.log('Episode response', response);\n        }\n      } else {\n        for (let i = this.minWatchedEp - 1; i > curEp; i -= 1) {\n          episodes.push({\n            number: i,\n          });\n        }\n\n        const response = await this.call(\n          'https://api.simkl.com/sync/history/remove',\n          JSON.stringify({\n            shows: [\n              {\n                ids: {\n                  simkl: this.ids.simkl,\n                },\n                seasons: [\n                  {\n                    number: 1,\n                    episodes,\n                  },\n                ],\n              },\n            ],\n          }),\n          false,\n          'POST',\n        );\n        this.logger.log('Episode remove response', response);\n      }\n\n      this.minWatchedEp = curEp + 1;\n    }\n\n    // Rating\n    if (this.ratingUpdate) {\n      if (this.animeInfo.user_rating) {\n        const response = await this.call(\n          'https://api.simkl.com/sync/ratings',\n          JSON.stringify({\n            shows: [\n              {\n                rating: this.animeInfo.user_rating,\n                ids: {\n                  simkl: this.ids.simkl,\n                },\n              },\n            ],\n          }),\n          false,\n          'POST',\n        );\n        this.logger.log('Rating response', response);\n      } else {\n        const response = await this.call(\n          'https://api.simkl.com/sync/ratings/remove',\n          JSON.stringify({\n            shows: [\n              {\n                ids: {\n                  simkl: this.ids.simkl,\n                },\n              },\n            ],\n          }),\n          false,\n          'POST',\n        );\n        this.logger.log('Rating remove response', response);\n      }\n    }\n\n    this.episodeUpdate = false;\n    this.statusUpdate = false;\n    this.ratingUpdate = false;\n  }\n\n  protected syncList = helper.syncList;\n\n  protected getSingle = helper.getSingle;\n\n  protected call = helper.call;\n\n  protected errorHandling = helper.errorHandling;\n\n  _delete() {\n    return this.call(\n      'https://api.simkl.com/sync/history/remove',\n      JSON.stringify({\n        shows: [\n          {\n            ids: {\n              simkl: this.ids.simkl,\n            },\n          },\n        ],\n      }),\n      false,\n      'POST',\n    );\n  }\n}\n","import * as definitions from './definitions';\n\nimport { Progress } from '../utils/progress';\nimport { predictionXhrGET } from '../background/releaseProgressUtils';\n\nimport { emitter, globalEmit } from '../utils/emitter';\nimport { SafeError } from '../utils/errors';\nimport { errorMessage as _errorMessage } from './Errors';\nimport { point10 } from './ScoreMode/point10';\nimport { SyncTypes } from './helper';\n\nObject.seal(emitter);\n\nexport abstract class SingleAbstract {\n  constructor(protected url: string) {\n    this.handleUrl(url);\n    this.logger = con.m('[S]', '#348fff');\n    return this;\n  }\n\n  protected logger;\n\n  protected type: definitions.contentType | null = null;\n\n  protected persistanceState;\n\n  protected undoState;\n\n  protected lastError;\n\n  protected askCompleted = false;\n\n  public abstract shortName: string;\n\n  protected abstract authenticationUrl: string;\n\n  protected rewatchingSupport = true;\n\n  protected ids = {\n    mal: NaN,\n    ani: NaN,\n    kitsu: {\n      id: NaN,\n      slug: '',\n    },\n    simkl: NaN,\n  };\n\n  protected options: {\n    u: string;\n    c: any;\n    r: any;\n    p: any;\n  } | null = null;\n\n  protected abstract handleUrl(url: string);\n\n  public getType() {\n    return this.type;\n  }\n\n  public getUrl() {\n    return this.url;\n  }\n\n  public supportsRewatching() {\n    return this.rewatchingSupport;\n  }\n\n  public abstract getCacheKey();\n\n  public abstract getPageId();\n\n  public getApiCacheKey(): string | number {\n    return this.getKey(['ANILIST']);\n  }\n\n  public getRulesCacheKey(): string | number {\n    return this.getKey(['ANILIST', 'KITSU'], false);\n  }\n\n  abstract _setStatus(status: definitions.status): void;\n\n  public setStatus(status: definitions.status): SingleAbstract {\n    status = Number(status);\n    this._setStatus(status);\n    return this;\n  }\n\n  abstract _getStatus(): definitions.status | number;\n\n  public getStatus(): definitions.status {\n    if (!this.isOnList()) return definitions.status.NoState;\n    return this._getStatus();\n  }\n\n  public getScoreMode() {\n    return point10;\n  }\n\n  abstract _setScore(score: definitions.score): void;\n\n  /**\n   * @deprecated Use setAbsoluteScore instead\n   */\n  public setScore(score: definitions.score): SingleAbstract {\n    score = parseInt(`${score}`);\n    if (!score) score = 0;\n    this._setScore(score);\n    return this;\n  }\n\n  abstract _getScore(): definitions.score;\n\n  /**\n   * @deprecated Use getAbsoluteScore instead\n   */\n  public getScore(): definitions.score {\n    const score = this._getScore();\n    if (!score) return 0;\n    return score;\n  }\n\n  abstract _setAbsoluteScore(score: definitions.score100): void;\n\n  public setAbsoluteScore(score: definitions.score100): SingleAbstract {\n    score = parseInt(`${score}`);\n    this._setAbsoluteScore(score);\n    return this;\n  }\n\n  abstract _getAbsoluteScore(): definitions.score100;\n\n  public getAbsoluteScore(): definitions.score100 {\n    const score = this._getAbsoluteScore();\n    if (!score) return 0;\n    return score;\n  }\n\n  abstract _setEpisode(episode: number): void;\n\n  public setEpisode(episode: number): SingleAbstract {\n    episode = parseInt(`${episode}`);\n    if (this.getTotalEpisodes() && episode > this.getTotalEpisodes())\n      episode = this.getTotalEpisodes();\n    this._setEpisode(episode);\n    return this;\n  }\n\n  abstract _getEpisode(): number;\n\n  public getEpisode(): number {\n    return this._getEpisode();\n  }\n\n  abstract _setVolume(volume: number): void;\n\n  public setVolume(volume: number): SingleAbstract {\n    this._setVolume(volume);\n    return this;\n  }\n\n  abstract _getVolume(): number;\n\n  public getVolume(): number {\n    return this._getVolume();\n  }\n\n  abstract _setTags(tags: string): void;\n\n  abstract _getTags(): string;\n\n  public setStreamingUrl(streamingUrl: string): SingleAbstract {\n    if (this.options) {\n      this.options.u = streamingUrl;\n    }\n    return this;\n  }\n\n  public getStreamingUrl(): string | undefined {\n    if (this.options && this.options.u) {\n      return this.options.u;\n    }\n\n    return undefined;\n  }\n\n  public cleanTags() {\n    this.options = null;\n  }\n\n  protected progress: false | Progress = false;\n\n  protected progressXhr;\n\n  public async initProgress() {\n    const xhr = await predictionXhrGET(this.getType()!, this.getApiCacheKey());\n    return new Progress(this.getCacheKey(), this.getType()!)\n      .init({\n        uid: this.getCacheKey(),\n        apiCacheKey: this.getApiCacheKey(),\n        title: this.getTitle(),\n        cacheKey: this.getCacheKey(),\n        progressMode: this.getProgressMode(),\n        watchedEp: this.getEpisode(),\n        single: this,\n        xhr,\n      })\n      .then(progress => {\n        this.updateProgress = false;\n        this.progress = progress;\n        this.progressXhr = xhr;\n      });\n  }\n\n  public getProgress() {\n    if (!this.progress) return false;\n    return this.progress;\n  }\n\n  public getProgressFormated() {\n    const op: {\n      label: string;\n      key: string;\n      state: 'complete' | 'ongoing' | 'dropped' | 'discontinued';\n      type: 'dub' | 'sub';\n      dropped: boolean;\n      episode: Number;\n      lastEp?: {\n        total: number;\n        timestamp?: number;\n      };\n      predicition?: {\n        timestamp: number;\n        probability: 'low' | 'medium' | 'high';\n      };\n    }[] = [];\n    const languageNames = new Intl.DisplayNames('en', { type: 'language' });\n    con.log(this.progressXhr);\n    if (this.progressXhr && Object.keys(this.progressXhr).length) {\n      this.progressXhr.forEach(el => {\n        op.push({\n          type: el.type,\n          key: el.id,\n          state: el.state,\n          label: languageNames.of(el.lang.replace(/^jp$/, 'ja')) || el.lang,\n          dropped: el.state === 'dropped' || el.state === 'discontinued',\n          episode: el.lastEp && el.lastEp.total ? el.lastEp.total : 0,\n          lastEp: el.lastEp,\n          predicition: el.prediction,\n        });\n      });\n    }\n    return op;\n  }\n\n  public getProgressOptions() {\n    return this.getProgressFormated().filter(el => el.state !== 'complete');\n  }\n\n  public getProgressCompleted() {\n    return this.getProgressFormated().filter(el => el.state === 'complete');\n  }\n\n  private updateProgress = false;\n\n  public getProgressMode(): string {\n    if (this.options && this.options.p) {\n      return this.options.p;\n    }\n\n    return '';\n  }\n\n  public setProgressMode(mode: string): void {\n    if (this.options) {\n      this.options.p = mode;\n      this.updateProgress = true;\n    }\n    if (!api.settings.get('malTags')) {\n      utils\n        .setEntrySettings(this.type, this.getCacheKey(), this.options, this._getTags())\n        .then(() => this.initProgress());\n    }\n  }\n\n  public getProgressKey() {\n    let mode = this.getProgressMode();\n\n    if (!mode) {\n      if (this.getType() === 'anime') {\n        mode = api.settings.get('progressIntervalDefaultAnime');\n      } else {\n        mode = api.settings.get('progressIntervalDefaultManga');\n      }\n    }\n\n    if (!mode) return null;\n\n    const res = /^([^/]*)\\/(.*)$/.exec(mode);\n\n    if (!res) return null;\n\n    return {\n      key: mode,\n      lang: res[1],\n      type: res[2],\n    };\n  }\n\n  public getPageRelations(): { name: string; icon: string; link: string }[] {\n    const name = this.shortName;\n    const res: { name: string; icon: string; link: string }[] = [];\n\n    if (this.ids.mal && name !== 'MAL') {\n      res.push({\n        name: 'MAL',\n        icon: 'https://cdn.myanimelist.net/images/favicon.ico',\n        link: `https://myanimelist.net/${this.type}/${this.ids.mal}`,\n      });\n    }\n\n    if (this.ids.ani && name !== 'AniList') {\n      res.push({\n        name: 'AniList',\n        icon: 'https://anilist.co/img/icons/favicon-32x32.png',\n        link: `https://anilist.co/${this.type}/${this.ids.ani}`,\n      });\n    }\n\n    if (this.ids.kitsu.id && name !== 'Kitsu') {\n      res.push({\n        name: 'Kitsu',\n        icon: 'https://kitsu.app/favicon-32x32-3e0ecb6fc5a6ae681e65dcbc2bdf1f17.png',\n        link: `https://kitsu.app/${this.type}/${this.ids.kitsu.id}`,\n      });\n    }\n\n    if (this.ids.simkl && name !== 'Simkl') {\n      res.push({\n        name: 'Simkl',\n        icon: 'https://eu.simkl.in/img_favicon/v2/favicon-32x32.png',\n        link: `https://simkl.com/${this.type}/${this.ids.simkl}`,\n      });\n    }\n\n    return res;\n  }\n\n  public fillRelations(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  abstract _update(): Promise<void>;\n\n  public update(): Promise<void> {\n    this.logger.log('[SINGLE]', 'Update info', this.ids);\n    this.lastError = null;\n    return this._update()\n      .catch(e => {\n        this.lastError = e;\n        throw e;\n      })\n      .then(() => {\n        this.persistanceState = this.getStateEl();\n\n        return utils.getEntrySettings(this.type, this.getCacheKey(), this._getTags());\n      })\n      .then(options => {\n        this.options = options;\n        this.registerEvent();\n        this.emitUpdate('state');\n      });\n  }\n\n  abstract _sync(): Promise<void>;\n\n  public async sync(): Promise<void> {\n    this.logger.log('[SINGLE]', 'Sync', this.ids);\n    this.lastError = null;\n    this._setTags(\n      await utils.setEntrySettings(this.type, this.getCacheKey(), this.options, this._getTags()),\n    );\n    return this._sync()\n      .catch(e => {\n        this.lastError = e;\n        throw e;\n      })\n      .then(() => {\n        this.undoState = this.persistanceState;\n        if (this.updateProgress) this.initProgress();\n        this._onList = true;\n        this.emitUpdate();\n      });\n  }\n\n  public emitUpdate(action: 'update' | 'state' = 'update') {\n    globalEmit(`${action}.${this.getCacheKey()}`, {\n      id: this.getPageId(),\n      type: this.getType(),\n      cacheKey: this.getCacheKey(),\n      state: this.getStateEl(),\n      meta: {\n        title: this.getTitle(),\n        image: this.getImage(),\n        malId: this.getMalId(),\n        totalEp: this.getTotalEpisodes(),\n        url: this.getUrl(),\n      },\n    });\n  }\n\n  abstract _delete(): Promise<void>;\n\n  public async delete(): Promise<void> {\n    return this._delete().then(() => {\n      this._onList = false;\n      globalEmit(`delete.${this.getCacheKey()}`, {\n        id: this.getPageId(),\n        type: this.getType(),\n        cacheKey: this.getCacheKey(),\n      });\n    });\n  }\n\n  protected globalUpdateEvent;\n\n  protected registerEvent() {\n    if (!this.globalUpdateEvent) {\n      this.globalUpdateEvent = emitter.on(`update.${this.getCacheKey()}`, data =>\n        this.updateEvent(data),\n      );\n    }\n  }\n\n  protected updateEvent(data) {\n    if (this.isDirty()) {\n      this.logger.log('Ignore event');\n      return;\n    }\n\n    if (data && data.state) {\n      this.setStateEl(data.state);\n      this.persistanceState = this.getStateEl();\n      emitter.emit('syncPage_fillUi');\n    }\n  }\n\n  public isDirty(): boolean {\n    return (\n      JSON.stringify(this.persistanceState) !== JSON.stringify(this.getStateEl()) ||\n      this.updateProgress\n    );\n  }\n\n  public undo(): Promise<void> {\n    this.logger.log('[SINGLE]', 'Undo', this.undoState);\n    if (!this.undoState) throw new SafeError('No undo state found');\n    if (!this.undoState.onList) {\n      // @ts-ignore\n      if (typeof this.delete === 'undefined') throw new Error('Deleting an entry is not supported');\n      // @ts-ignore\n      return this.delete().then(() => {\n        this.setStateEl(this.undoState);\n        this.undoState = null;\n      });\n    }\n    this.setStateEl(this.undoState);\n    return this.sync().then(() => {\n      this.undoState = null;\n    });\n  }\n\n  abstract _getTitle(raw: boolean): string;\n\n  public getTitle(raw = false) {\n    return this._getTitle(raw);\n  }\n\n  abstract _getTotalEpisodes(): number;\n\n  public getTotalEpisodes() {\n    let eps = this._getTotalEpisodes();\n    if (!eps) eps = 0;\n    return eps;\n  }\n\n  abstract _getTotalVolumes(): number;\n\n  public getTotalVolumes() {\n    return this._getTotalVolumes();\n  }\n\n  protected _onList = false;\n\n  public isOnList() {\n    return this._onList;\n  }\n\n  protected _authenticated = false;\n\n  public isAuthenticated() {\n    return this._authenticated;\n  }\n\n  abstract _getDisplayUrl(): string;\n\n  public getDisplayUrl(): string {\n    return this._getDisplayUrl();\n  }\n\n  public getMalUrl(): string | null {\n    if (!Number.isNaN(this.ids.mal)) {\n      return `https://myanimelist.net/${this.getType()}/${this.ids.mal}`;\n    }\n    return null;\n  }\n\n  public getMalId(): number | null {\n    if (!Number.isNaN(this.ids.mal)) {\n      return this.ids.mal;\n    }\n    return null;\n  }\n\n  public getIds() {\n    return this.ids;\n  }\n\n  abstract _getImage(): string;\n\n  public getImage(): string {\n    return this._getImage();\n  }\n\n  public setImage?(url: string): void;\n\n  abstract _getRating(): Promise<string>;\n\n  public getRating(): Promise<string> {\n    return this._getRating().then(rating => {\n      if (!rating) return 'N/A';\n      return rating;\n    });\n  }\n\n  public setResumeWatching(url: string, ep: number) {\n    return utils.setResumeWaching(url, ep, this.type, this.getCacheKey());\n  }\n\n  public getResumeWatching(): { url: string; ep: number } | null {\n    if (this.options && this.options.r) return this.options.r;\n    return null;\n  }\n\n  public setContinueWatching(url: string, ep: number) {\n    return utils.setContinueWaching(url, ep, this.type, this.getCacheKey());\n  }\n\n  public getContinueWatching(): { url: string; ep: number } | null {\n    if (this.options && this.options.c) return this.options.c;\n    return null;\n  }\n\n  public increaseRewatchCount(): void {\n    //  do nothing\n  }\n\n  getStateEl() {\n    return {\n      onList: this.isOnList(),\n      episode: this.getEpisode(),\n      volume: this.getVolume(),\n      status: this.getStatus(),\n      score: this.getScore(),\n      absoluteScore: this.getAbsoluteScore(),\n    };\n  }\n\n  setStateEl(state) {\n    this._onList = state.onList;\n    this.setEpisode(state.episode);\n    this.setVolume(state.volume);\n    this.setStatus(state.status);\n    this.setScore(state.score);\n    if (state.absoluteScore) this.setAbsoluteScore(state.absoluteScore);\n  }\n\n  getStateDiff() {\n    const persistance = this.getStateEl();\n    if (persistance && this.undoState) {\n      const diff: any = {};\n      for (const key in persistance) {\n        if (persistance[key] !== this.undoState[key]) {\n          diff[key] = persistance[key];\n        }\n      }\n      return diff;\n    }\n    return undefined;\n  }\n\n  public async lifeCycleHook(state: 'afterCheckSync' | 'beforeSync') {\n    if (this.askCompleted) {\n      if (\n        (state === 'afterCheckSync' && api.settings.get('askBefore')) ||\n        (state === 'beforeSync' && !api.settings.get('askBefore'))\n      ) {\n        this.askCompleted = false;\n        if (this.getStatus() === definitions.status.Rewatching) {\n          await this.finishRewatchingMessage();\n        } else {\n          await this.finishWatchingMessage();\n        }\n      }\n    }\n  }\n\n  public async checkSync(episode: number, volume?: number): Promise<boolean> {\n    const curEpisode = this.getEpisode();\n    const curStatus = this.getStatus();\n    const curVolume = this.getVolume();\n\n    if (curStatus === definitions.status.Completed) {\n      if (episode === 1) {\n        return this.startRewatchingMessage();\n      }\n      return false;\n    }\n\n    if (\n      curEpisode >= episode &&\n      // Novel Volume\n      !(\n        typeof volume !== 'undefined' &&\n        (curVolume || volume > 1 || !episode) &&\n        volume > curVolume\n      )\n    ) {\n      return false;\n    }\n\n    if (episode && episode === this.getTotalEpisodes()) {\n      this.askCompleted = true;\n      return true;\n    }\n\n    if (curStatus !== definitions.status.Watching && curStatus !== definitions.status.Rewatching) {\n      return this.startWatchingMessage();\n    }\n\n    return true;\n  }\n\n  public async startWatchingMessage() {\n    return utils\n      .flashConfirm(api.storage.lang(`syncPage_flashConfirm_start_${this.getType()}`), 'add')\n      .then(res => {\n        if (res) this.setStatus(definitions.status.Watching);\n        return res;\n      });\n  }\n\n  public async finishWatchingMessage(): Promise<boolean> {\n    const currentScore = this.getScoreCheckboxValue();\n\n    let checkHtml =\n      '<div><select id=\"finish_score\" style=\"margin-top:5px; color:white; background-color:#4e4e4e; border: none;\">';\n    this.getScoreCheckbox().forEach(el => {\n      checkHtml += `<option value=\"${el.value}\" ${currentScore === el.value ? 'selected' : ''}>${\n        el.label\n      }</option>`;\n    });\n    checkHtml += '</select></div>';\n\n    return utils\n      .flashConfirm(api.storage.lang('syncPage_flashConfirm_complete') + checkHtml, 'complete')\n      .then(res => {\n        if (res) {\n          this.setStatus(definitions.status.Completed);\n          const finishScore = Number(j.$('#finish_score').val());\n          if (finishScore > 0) {\n            this.logger.log(`finish_score: ${j.$('#finish_score :selected').val()}`);\n            this.handleScoreCheckbox(j.$('#finish_score :selected').val());\n          }\n        }\n\n        return res;\n      });\n  }\n\n  public async startRewatchingMessage(): Promise<boolean> {\n    return utils\n      .flashConfirm(\n        api.storage.lang(`syncPage_flashConfirm_rewatch_start_${this.getType()}`),\n        'add',\n      )\n      .then(res => {\n        if (res) this.setStatus(definitions.status.Rewatching);\n        return res;\n      });\n  }\n\n  public async finishRewatchingMessage(): Promise<boolean> {\n    return utils\n      .flashConfirm(\n        api.storage.lang(`syncPage_flashConfirm_rewatch_finish_${this.getType()}`),\n        'complete',\n      )\n      .then(res => {\n        if (res) {\n          this.setStatus(definitions.status.Completed);\n          this.increaseRewatchCount();\n        }\n        return res;\n      });\n  }\n\n  public getScoreCheckbox() {\n    return this.getScoreMode().getOptions();\n  }\n\n  public getScoreCheckboxValue() {\n    return this.getScoreMode().valueToOptionValue(this.getAbsoluteScore());\n  }\n\n  public handleScoreCheckbox(value) {\n    this.setAbsoluteScore(this.getScoreMode().optionValueToValue(value));\n  }\n\n  public getDisplayScoreCheckbox() {\n    const curScore = this.getScoreCheckboxValue();\n    const labelEl = this.getScoreCheckbox().filter(el => el.value === curScore);\n    if (labelEl.length) return labelEl[0].label;\n    return '';\n  }\n\n  public getStatusCheckbox() {\n    const statusEs = [\n      {\n        value: '1',\n        label: api.storage.lang(`UI_Status_watching_${this.getType()}`),\n      },\n      { value: '2', label: api.storage.lang('UI_Status_Completed') },\n      { value: '3', label: api.storage.lang('UI_Status_OnHold') },\n      { value: '4', label: api.storage.lang('UI_Status_Dropped') },\n      {\n        value: '6',\n        label: api.storage.lang(`UI_Status_planTo_${this.getType()}`),\n      },\n    ];\n\n    if (this.rewatchingSupport) {\n      statusEs.push({\n        value: '23',\n        label: api.storage.lang(`UI_Status_Rewatching_${this.getType()}`),\n      });\n    }\n\n    return statusEs;\n  }\n\n  public handleStatusCheckbox(value) {\n    this.setStatus(value);\n  }\n\n  public getStatusCheckboxValue() {\n    return this.getStatus();\n  }\n\n  public getKey(allowed: SyncTypes[], forceMal = true) {\n    if (forceMal && this.ids.mal) return this.ids.mal;\n    if (this.ids.ani && allowed.includes('ANILIST')) return `anilist:${this.ids.ani}`;\n    if (this.ids.kitsu.id && allowed.includes('KITSU')) return `kitsu:${this.ids.kitsu.id}`;\n    if (this.ids.simkl && allowed.includes('SIMKL')) return `simkl:${this.ids.simkl}`;\n    return this.ids.mal;\n  }\n\n  public getLastError() {\n    return this.lastError;\n  }\n\n  public getLastErrorMessage() {\n    return this.errorMessage(this.getLastError());\n  }\n\n  flashmError(error) {\n    utils.flashm(this.errorMessage(error), { error: true, type: 'error' });\n  }\n\n  errorMessage(error) {\n    return _errorMessage(error, this.authenticationUrl);\n  }\n}\n","import * as helper from './helper';\nimport { Cache } from '../utils/Cache';\n\nimport { Single as MalSingle } from './MyAnimeList_hybrid/single';\nimport { Single as MalApiSingle } from './MyAnimeList_api/single';\nimport { Single as SnilistSingle } from './AniList/single';\nimport { Single as SitsuSingle } from './Kitsu/single';\nimport { Single as SimklSingle } from './Simkl/single';\nimport { Single as ShikiSingle } from './Shikimori/single';\nimport { Single as LocalSingle } from './Local/single';\n\nexport function getSingle(url: string) {\n  if (/^local:\\/\\//i.test(url)) {\n    return new LocalSingle(url);\n  }\n  const syncMode = helper.getSyncMode(url);\n  if (syncMode === 'MAL') {\n    return new MalSingle(url);\n  }\n  if (syncMode === 'MALAPI') {\n    return new MalApiSingle(url);\n  }\n  if (syncMode === 'ANILIST') {\n    return new SnilistSingle(url);\n  }\n  if (syncMode === 'KITSU') {\n    return new SitsuSingle(url);\n  }\n  if (syncMode === 'SIMKL') {\n    return new SimklSingle(url);\n  }\n  if (syncMode === 'SHIKI') {\n    return new ShikiSingle(url);\n  }\n  throw 'Unknown sync mode';\n}\n\nexport async function getRulesCacheKey(\n  url: string,\n): Promise<{ rulesCacheKey: string | number; singleObj? }> {\n  const cacheObj = new Cache(`rulesCacheKey/${url}`, 7 * 24 * 60 * 60 * 1000);\n\n  if (await cacheObj.hasValue()) {\n    return cacheObj.getValue().then(res => {\n      return {\n        rulesCacheKey: res,\n      };\n    });\n  }\n\n  const singleObj = getSingle(url);\n  await singleObj.update();\n  cacheObj.setValue(singleObj.getRulesCacheKey());\n  return {\n    rulesCacheKey: singleObj.getRulesCacheKey(),\n    singleObj,\n  };\n}\n","/* eslint-disable max-classes-per-file */\nexport class MissingPlayerError extends Error {\n  public url;\n\n  constructor(url: string) {\n    const parts = url.split('/');\n    let domain = url;\n    if (parts.length > 2) domain = parts[2];\n    super(domain);\n    this.url = url;\n    this.name = 'MissingPlayerError';\n  }\n}\n\nexport class SafeError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'SafeError';\n  }\n}\n\nexport class MissingDataError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingDataError';\n  }\n}\n\nexport class CustomDomainError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CustomDomainError';\n  }\n}\n","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, withCtx as _withCtx, createVNode as _createVNode, renderSlot as _renderSlot, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-0617b4bf\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"info\" }\n\nimport { PropType } from 'vue';\nimport ImageLazy from './image-lazy.vue';\nimport ImageFit from './image-fit.vue';\nimport MediaLink from './media-link.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'image-text',\n  props: {\n  href: {\n    type: String,\n    default: '',\n  },\n  image: {\n    type: String,\n    default: '',\n  },\n  imageType: {\n    type: String as PropType<'round' | 'cover'>,\n    default: 'round',\n  },\n  loading: {\n    type: Boolean,\n    default: false,\n  },\n},\n  setup(__props) {\n\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"head\", { loading: __props.loading }])\n  }, [\n    _createVNode(MediaLink, {\n      href: __props.href,\n      class: _normalizeClass([\"img\", { [__props.imageType]: true }])\n    }, {\n      default: _withCtx(() => [\n        (__props.imageType === 'cover')\n          ? (_openBlock(), _createBlock(ImageFit, {\n              key: 0,\n              loading: __props.loading,\n              src: __props.image,\n              class: \"img-el\",\n              mode: \"cover\"\n            }, null, 8 /* PROPS */, [\"loading\", \"src\"]))\n          : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n              (!__props.loading)\n                ? (_openBlock(), _createBlock(ImageLazy, {\n                    key: 0,\n                    src: __props.image,\n                    class: \"img-el\"\n                  }, null, 8 /* PROPS */, [\"src\"]))\n                : _createCommentVNode(\"v-if\", true)\n            ], 64 /* STABLE_FRAGMENT */))\n      ]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"href\", \"class\"]),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _renderSlot(_ctx.$slots, \"default\")\n    ])\n  ], 2 /* CLASS */))\n}\n}\n\n})","import script from \"./image-text.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./image-text.vue?vue&type=script&lang=ts&setup=true\"\n\nimport _style_0 from \"./image-text.vue?vue&type=style&index=0&id=0617b4bf&inline&lang=less&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['styles',[_style_0]],['__scopeId',\"data-v-0617b4bf\"],['__file',\"image-text.vue\"]])\n\nexport default __exports__","export default \"/* stylelint-disable prettier/prettier */\\n/* Aspect ratios */\\n/* Transitions */\\n/* Typography */\\n/* Shadows */\\n/* Fonts */\\n@keyframes skeleton-loading-malsync-0617b4bf {\\nto {\\n    transform: translateX(100%);\\n}\\n}\\n.head[data-v-0617b4bf] {\\n  display: flex;\\n  gap: 20px;\\n}\\n.head .img[data-v-0617b4bf] {\\n  width: calc(var(--base-font-size) * 6.25);\\n  min-width: calc(var(--base-font-size) * 6.25);\\n}\\n.head .img.round[data-v-0617b4bf] {\\n  box-shadow: 0 11px 21px rgba(0, 0, 0, 0.065), 0 4px 8px rgba(0, 0, 0, 0.1);\\n  height: calc(var(--base-font-size) * 6.25);\\n  border-radius: 50%;\\n  overflow: hidden;\\n}\\n.head .img.round .img-el[data-v-0617b4bf] {\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover;\\n}\\n.head .info[data-v-0617b4bf] {\\n  flex-grow: 1;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around;\\n}\\n.head.loading .img.round[data-v-0617b4bf] {\\n  position: relative;\\n  overflow: hidden;\\n  transition: background-color 0.1s ease-in-out;\\n  background-color: var(--cl-backdrop);\\n}\\n.head.loading .img.round[data-v-0617b4bf]::after {\\n  opacity: var(--cl-loading);\\n  transition: opacity 0.25s ease-in-out;\\n  animation: skeleton-loading-malsync-0617b4bf 1.5s infinite;\\n  content: '';\\n  height: 100%;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  transform: translateX(-100%);\\n  z-index: 1;\\n  background: linear-gradient(90deg, hsla(0, 0%, 100%, 0), var(--cl-backdrop), hsla(0, 0%, 100%, 0));\\n  filter: brightness(1.15);\\n}\\n.head.loading .info[data-v-0617b4bf] {\\n  overflow: hidden;\\n}\\n\""],"names":["Single","constructor","url","super","displayUrl","shortName","authenticationUrl","this","logger","con","m","handleUrl","match","type","utils","urlPart","ids","ani","Number","mal","getCacheKey","getKey","getPageId","_getStatus","parseInt","animeInfo","mediaListEntry","status","_setStatus","_getScore","score","Math","round","_setScore","_getAbsoluteScore","_setAbsoluteScore","_getEpisode","progress","_setEpisode","episode","_getVolume","progressVolumes","_setVolume","volume","_getTags","tags","notes","_setTags","_getTitle","title","userPreferred","_getTotalEpisodes","eps","episodes","chapters","_getTotalVolumes","volumes","_getDisplayUrl","_getImage","coverImage","large","_getRating","Promise","resolve","averageScore","_update","selectId","selectQuery","isNaN","query","variables","id","toUpperCase","_authenticated","apiCall","catch","e","then","json","log","data","Media","idMal","siteUrl","_onList","repeat","_sync","mediaId","scoreRaw","SaveMediaListEntry","authentication","getScoreMode","api","settings","get","scoreFormat","_delete","listI","animeI","included","kitsu","slug","attributes","reconsuming","toString","ratingHundred","_getTwentyScore","volumesOwned","titles","canonicalTitle","console","error","episodeCount","chapterCount","volumeCount","getType","posterImage","averageRating","kitsuSlugRes","kitsuSlugtoKitsu","res","malId","kitsuRes","malToKitsu","relation","find","item","relationships","userId","async","tempAnimeInfo","length","reconsumeCount","ratingTwenty","tType","updateUrl","post","isOnList","user","mode","message","kitsuSlug","NaN","k","mapping","externalSite","externalId","splice","malid","storage","set","ratingSystem","page","key","decodeURIComponent","getScore","setScore","volumeprogress","raw","name","image","setImage","sync","sUrl","remove","setStreamingUrl","streamingUrl","getStreamingUrl","pending","curSt","my_list_status","getRewatching","setRewatching","increaseRewatchCount","num_times_reread","num_times_rewatched","num_chapters_read","num_watched_episodes","num_volumes_read","join","trim","split","is_rereading","is_rewatching","state","num_chapters","num_episodes","num_volumes","main_picture","medium","mean","path","fields","num_episodes_watched","start_date","returnYYYYMMDD","finish_date","sentData","property","dataObj","fillRelations","cacheObj","hasValueAndIsNotEmpty","exists","getValue","da","el","setValue","point10","ui","module","getOptions","value","label","lang","valueToOptionValue","optionValueToValue","optionValue","point100","pattern","resArr","i","push","String","point100decimal","toFixed","point10decimal","point20decimal","smiley3","smiley4","stars5","text","animeMeta","russian","preview","metadata","rating","parameter","target_id","user_id","target_type","rewatches","user_rate","episodeUpdate","statusUpdate","ratingUpdate","minWatchedEp","curWatchedEp","rewatchingSupport","syncList","getSingle","call","errorHandling","simkl","user_rating","private_memo","show","total_episodes_count","poster","de","extended","Error","last_watched","last_watched_at","next_to_watch","not_aired_episodes_count","watched_episodes_count","next","response","JSON","stringify","shows","to","curEp","number","seasons","Object","seal","SingleAbstract","askCompleted","options","updateProgress","getUrl","supportsRewatching","getApiCacheKey","getRulesCacheKey","setStatus","getStatus","NoState","setAbsoluteScore","getAbsoluteScore","setEpisode","getTotalEpisodes","getEpisode","setVolume","getVolume","u","cleanTags","initProgress","xhr","init","uid","apiCacheKey","getTitle","cacheKey","progressMode","getProgressMode","watchedEp","single","progressXhr","getProgress","getProgressFormated","op","languageNames","Intl","DisplayNames","keys","forEach","of","replace","dropped","lastEp","total","predicition","prediction","getProgressOptions","filter","getProgressCompleted","p","setProgressMode","setEntrySettings","getProgressKey","exec","getPageRelations","icon","link","update","lastError","persistanceState","getStateEl","getEntrySettings","registerEvent","emitUpdate","undoState","action","meta","getImage","getMalId","totalEp","globalUpdateEvent","on","updateEvent","isDirty","setStateEl","emit","undo","onList","delete","getTotalVolumes","isAuthenticated","getDisplayUrl","getMalUrl","getIds","getRating","setResumeWatching","ep","setResumeWaching","getResumeWatching","r","setContinueWatching","setContinueWaching","getContinueWatching","c","absoluteScore","getStateDiff","persistance","diff","lifeCycleHook","Rewatching","finishRewatchingMessage","finishWatchingMessage","checkSync","curEpisode","curStatus","curVolume","Completed","startRewatchingMessage","Watching","startWatchingMessage","flashConfirm","currentScore","getScoreCheckboxValue","checkHtml","getScoreCheckbox","j","$","val","handleScoreCheckbox","getDisplayScoreCheckbox","curScore","labelEl","getStatusCheckbox","statusEs","handleStatusCheckbox","getStatusCheckboxValue","allowed","forceMal","includes","getLastError","getLastErrorMessage","errorMessage","flashmError","flashm","test","syncMode","SafeError","_hoisted_1","class","__name","props","href","default","imageType","loading","Boolean","setup","__props","_ctx","_cache","src","_","$slots"],"sourceRoot":""}
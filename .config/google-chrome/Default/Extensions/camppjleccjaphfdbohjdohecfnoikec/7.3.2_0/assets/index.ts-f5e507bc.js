import{q as E,x as T,ai as p,aj as G,B as u,L as m,ak as w,Q as P,al as x,am as n,R as d}from"./index-5ad58ea9.js";import{K as g,N as B,q as _,A as o,Q as I,T as R,V as L,X as b}from"./constants-e5712b98.js";import{c as D,M as $,A as H,g as O,d as S,D as Q}from"./analytics-e24f0cc0.js";import{e as v,h as F}from"./webAccess-daccfe0b.js";import"./backend-f1dada26.js";async function k(t){return n.tabs.query({discarded:!1}).then(e=>e.forEach(r=>n.tabs.sendMessage(r.id,t).catch(i=>i)))}async function K(){await E.fetchQuery({...T.UserSession,staleTime:0}).catch(t=>{}),E.fetchQuery({...T.UserUsageUAM,staleTime:0}).catch(t=>{})}async function W(){p(null),E.resetQueries({predicate:t=>!G.includes(t.queryKey[0])}),k({action:"QUERYCLIENT_SIGNOUT",from:"BG_SCRIPT"}),E.setQueryData(T.UserSession.queryKey,null)}async function U(){const t=await u.commands.getAll(),e=t.find(i=>i.name==="toggle_merlin"),r=t.find(i=>i.name==="_execute_action");return e&&e.shortcut!==""?await m.set("shortcut",e.shortcut):r&&r.shortcut!==""?await m.set("shortcut",r.shortcut):await m.set("shortcut",""),e.shortcut==="⇧⌘,"||e.shortcut==="Ctrl+Shift+Comma"?r.shortcut||"":e.shortcut||r.shortcut||""}function V(t){w().then(e=>e&&u.tabs.sendMessage(e.id,{data:{...t}})).catch(e=>console.error(e))}const Y=async()=>{try{E.fetchQuery(P),x()}catch(t){console.error(t)}};function N(t){return Math.floor(Math.random()*10)===0?t():!1}const M=async t=>{try{const e=await fetch(`${D}?measurement_id=${$}&api_secret=${H}`,{body:JSON.stringify(t),method:"POST"});return}catch(e){console.error("Google Analytics request failed with an exception",e)}},q=async t=>{let e=`extensionVersion=${u.runtime.getManifest().version}&clientId=${await O()}&sessionId=${await S()}`;if(t.reset||t.email===""||t.email===null)u.runtime.setUninstallURL(`${g}?${e}`);else{const{email:r,name:i}=t;e+=`&email=${r}&name=${i}`,u.runtime.setUninstallURL(`${g}?${e}`)}},A=async t=>{try{let e="";return await fetch(t).then(r=>{if(!r.ok)throw new Error("Network response was not ok");return r.text()}).then(r=>{e=r}).catch(r=>console.error(`Fetch Error: ${r}`)),e}catch{return""}};Y();n.runtime.onInstalled.addListener(async t=>{const e=n.runtime.getManifest().version,r=`extensionVersion=${e}&clientId=${await O()}&sessionId=${await S()}`;if(m.set("extVersion",e),m.set("tglMountPreference",!0),n.runtime.setUninstallURL(`${g}?${r}`),n.contextMenus.create({contexts:["selection"],id:"merlinExtContextBtn",title:"Give context to Merlin"}),t.reason==="install"){N(()=>fetch(`${b}?${r}`)),n.tabs.create({url:B}),m.set("userThemePreference","system"),m.set("installedAt",Date.now());const i={engagement_time_msec:Q,session_id:await S(),timestamp:JSON.stringify(Date.now())};M({client_id:await O(),events:[{name:"ExtensionInstalled",params:i}]})}if(t.reason==="update"){N(()=>fetch(`${L}?${r}`).catch(a=>a));const i=await m.get("tglMountPreference");i!==!0&&i!==!1&&await m.set("tglMountPreference",!0)}U()});n.runtime.onMessageExternal.addListener((t,e,r)=>{var i;if(t.from===_.MERLIN_APP){if(t.action===o.APP_REQUEST.SIGNIN&&((i=t.payload)!=null&&i.closeTab&&n.tabs.remove(e.tab.id),K(),r({})),t.action===o.APP_REQUEST.SIGNOUT&&(W(),r({})),t.action===o.OPEN_OPTIONS_PAGE&&(n.tabs.create({url:I}),r({})),t.action===o.CHAT_WEBPAGE&&(n.tabs.create({url:R}),r({})),t.action==="RQ_REFETCH"){if(t.payload.isInfiniteQuery){const a=t.payload.queryOptionKey;E.fetchInfiniteQuery({...T[a],staleTime:0})}else{const a=t.payload.queryOptionKey;E.fetchQuery({...T[a],staleTime:0})}r({})}t.action==="FETCH"&&d(t.payload).then(a=>{r(a)}),t.action==="STORAGE_GET"&&n.storage.local.get([t.payload.key]).then(a=>r(a[t.payload.key])),t.action==="STORAGE_SET"&&n.storage.local.set({[t.payload.key]:t.payload.value}).then(()=>r({})),t.action==="STORAGE_REMOVE"&&n.storage.local.remove([t.payload.key]).then(()=>r({})),t.action==="STORAGE_CLEAR"&&d(t.payload).then(a=>{r(a)}),t.action==="EXTENSION_VERSION"&&r({version:n.runtime.getManifest().version}),t.action==="SHORTCUT"&&u.commands.getAll().then(a=>{const h=a.find(f=>f.name==="_execute_action");h!=null&&h.shortcut?r({shortcut:h==null?void 0:h.shortcut}):r({shortcut:null})})}return t.from===_.YOUTUBE_PAGE_FOREGROUND&&(n.tabs.sendMessage(e.tab.id,{action:"SEND_CAPTIONS",data:t.data,from:"BACKGROUND"}),r({})),!0});n.commands.onCommand.addListener(t=>{n.tabs.query({active:!0,currentWindow:!0}).then(e=>{t==="toggle_merlin"&&n.tabs.sendMessage(e[0].id,{data:{from:"hotKey"}}).catch(()=>{(e[0].url.includes("chrome://")||e[0].url.includes("extension://")&&e[0].url!=="https://getmerlin.in/chat"||e[0].url==="about:blank")&&n.tabs.create({url:"https://getmerlin.in/chat"})})})});n.contextMenus.onClicked.addListener(t=>{t.menuItemId==="merlinExtContextBtn"&&n.tabs.query({active:!0,currentWindow:!0}).then(e=>{n.tabs.sendMessage(e[0].id,{data:{data:{selectionText:t.selectionText},from:"contextMenu"}})})});n.action.onClicked.addListener(t=>{t.url!=="https://getmerlin.in/chat"&&(t.url.includes("chrome://")||t.url.includes("edge://")||t.url.includes("extension://")?t.url.includes("shortcut")||n.tabs.create({url:"https://getmerlin.in/chat"}):n.tabs.query({active:!0,currentWindow:!0}).then(e=>{try{n.tabs.sendMessage(e[0].id,{data:{from:"extPopupButton"}})}catch{n.action.setPopup({popup:n.runtime.getURL("/popup.html"),tabId:t.id})}}))});n.runtime.onMessage.addListener((t,e,r)=>(t.action===o.OPEN_OPTIONS_PAGE&&(n.tabs.create({url:I}),r({})),t.from==="selectContextBtn"&&(V(t),r({})),t.from===_.YOUTUBE_SUMMARY&&t.action==="SEND_BATCH_LENGTH"&&(n.tabs.sendMessage(e.tab.id,{action:"SEND_BATCH_LENGTH",data:t.data,from:"BACKGROUND"}),r({})),t.from===_.YOUTUBE_BTN&&(u.tabs.sendMessage(e.tab.id,{action:"YOUTUBE_BTN_CLICKED",from:"BACKGROUND"}),r({})),t.from===_.CONTENT_SCRIPT&&(t.action==="FETCH"&&d(t.payload).then(i=>{r(i)}),t.action===o.AUTH.SYNC_USAGE&&(E.fetchQuery({...T.UserUsageUAM,staleTime:0}),r({}))),t.action===o.NEW_TAB&&(u.tabs.create({url:t.payload.url}),r({})),t.action===o.BROWSER.CHECK_SHORTCUT&&U().then(i=>{n.tabs.sendMessage(e.tab.id,{data:{key:i}}),r({})}),t.action===o.ANALYTICS&&(M(t.payload),r({})),t.action===o.UNINSTALL_URL&&(q(t.payload),r({})),!0));n.storage.onChanged.addListener(async(t,e)=>{if(e==="local")for(const r in t){const i=t[r],{newValue:a,oldValue:h}=i;if(a&&a!==h&&(a==null?void 0:a.status)==="pending"){const{action:f,id:C,payload:s}=a;let c=null;if(f===o.FETCH_TEXT){let l;try{l=await(await fetch(s.url,s.options)).text()}catch{l=null}c=l}if(f===o.FETCH_JSON){let l;try{l=await(await fetch(s.url,s.options)).json()}catch{l=null}c=l}if(f===o.GET_GOOGLE_COMPLETION)if(!s.query)c=null;else try{c=(await(await fetch(new URL("http://suggestqueries.google.com/complete/search?client=chrome&q="+s.query))).json())[1]}catch{c=null}if(f===o.GET_GOOGLE_COMPLETION_V2)if(!s.query)c=null;else try{c=(await(await fetch("https://www.google.com/complete/search?"+new URLSearchParams({client:"chrome",output:"chrome",q:s.query+" > "}))).json())[1]}catch{c=null}f===o.BROWSER.CHECK_SHORTCUT&&(c=await U()),f===o.WEB_ACCESS.GET_HTML_FROM_URL&&(c=await v(s.url,s.successfulGet,s.timeout)),f===o.GET_PR_DIFF&&(c=await A(s.url)),f===o.GET_PR_PATCH&&(c=await A(s.urlPatch)),f===o.EXTRACT_DOM&&(c=await F(s.url)),u.storage.local.set({[C]:{...a,response:c,status:"fulfilled"}}).then(()=>{u.runtime.lastError&&console.error(u.runtime.lastError)},l=>{u.storage.local.set({[C]:{...a,response:null,status:"fulfilled"}})})}}});n.runtime.onUpdateAvailable.addListener(()=>{n.tabs.query({}).then(t=>{t.length<3&&(fetch(`${L}?extensionVersion=${n.runtime.getManifest().version}&forceUpdate=true`),n.runtime.reload())})});n.storage.local.get(t=>{for(const e in t)/^getFromBackground-/.test(e)&&n.storage.local.remove(e)});
